{"version":3,"file":"static/js/9509.e7ca0dfc.chunk.js","mappings":"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","sources":["app/Components/Filters/FilterType/Elements/FilterNetworks.js","app/Components/Filters/FilterType/CircularFilter.js","app/Components/Filters/FilterType/RectangularFilter.js","app/Components/Filters/FilterType/RoundEdgedFilter.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","app/Components/Filters/FilterType/SquareFilter.js","app/Components/Filters/TagFilters/index.js","app/Components/Filters/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nconst DefaultNetwork = React.lazy(() => import('../../../../Themes/Elements/Network/DefaultNetwork'))\nexport default class FilterNetworks extends PureComponent {\n  render() {\n    const { filterIconClass, network, isDefault} = this.props;\n    const isDefaultIcon = isDefault ? true : network.id === 7 || network.id === 4 ? true : false\n    return (isDefaultIcon ? <DefaultNetwork network={network} networkClass={filterIconClass} /> : \n    <div className={`${filterIconClass} tb__icon tb-${network.icon}`}><div> </div></div>);\n  }\n}\n","import React, { PureComponent, Suspense } from \"react\";\nimport { connect } from 'react-redux';\nimport { filterPostDataAppendWebFilter } from '../../../../actions/themeActions'\nimport FilterNetworks from \"./Elements/FilterNetworks\"\n\nclass CircularFilter extends PureComponent {\n  state = { networkID: null }\n  onClickWebFilters = (networkID) => event => {\n    this.props.changeFilterStatus(2)\n\n    const tstamp = Math.floor(Date.now() / 1000);\n    const { appendData, wall } = this.props;\n    let postCount = wall.ThemeRule.numberOfPosts;\n    this.props.filterPostDataAppendWebFilter(\n      wall.Wall.id,\n      tstamp,\n      postCount,\n      networkID,\n      appendData.after,\n      appendData.heightEvent,\n      null\n    );\n    this.setState({ networkID: networkID })\n  }\n\n  render() {\n    const { webFilters, languageSetting } = this.props;\n    const { networkID } = this.state;\n    return (\n      <div className=\"tb_filter_circular_wrapper\">\n        <div className=\"tb_filter_circular_list\" onClick={this.onClickWebFilters(0)}>\n          <div className={`tb_filter_circular_button_text ${(!networkID) ? ` tb_filter_active` : ``}`}>{languageSetting.filterButton}  </div>\n        </div>\n        {\n          (webFilters && webFilters.length > 0) ? webFilters.map((item) => {\n            return <div className=\"tb_filter_circular_list\" onClick={this.onClickWebFilters(item.Network.id)}>\n              <div className={`tb_filter_circular_button ${(networkID && networkID == item.Network.id) && this.props.webFiltersStatus == 2 ? ` tb_filter_active` : ``}`}>\n                <Suspense fallback={<></>}><FilterNetworks filterIconClass={'tb_filter_round_edge_ico'} network={item.Network} isDefault={false} /></Suspense>\n              </div>\n            </div>\n          }) : null\n        }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\n  }\n}\nexport default connect(null, mapDispatchToProps)(CircularFilter);","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { filterPostDataAppendWebFilter } from '../../../../actions/themeActions'\nimport FilterNetworks from \"./Elements/FilterNetworks\";\n\n\nclass RectangularFilter extends PureComponent {\n\n  state = { networkID: null }\n  onClickWebFilters = (networkID) => event => {\n    this.props.changeFilterStatus(2)\n\n    const tstamp = Math.floor(Date.now() / 1000);\n    const { appendData, wall } = this.props;\n    let postCount = wall.ThemeRule.numberOfPosts;\n    this.props.filterPostDataAppendWebFilter(\n      wall.Wall.id,\n      tstamp,\n      postCount,\n      networkID,\n      appendData.after,\n      appendData.heightEvent,\n      null\n    );\n    this.setState({ networkID: networkID })\n  }\n\n  render() {\n    const { webFilters, languageSetting } = this.props;\n    const { networkID } = this.state;\n\n    return (\n      <div className=\"tb_filter_rectangular_wrapper\">\n        <div className=\"tb_filter_rectangular_list\" onClick={this.onClickWebFilters(0)}>\n          <div className={`tb_filter_rectangular_button tb-network-rectangular-ico-users ${(networkID == 0) && this.props.webFiltersStatus == 2 ? `tb_filter_active` : ``}`}>\n            <div className={`tb_filter_rectangular_icon`}>\n              <div className=\"tb_filter_rectangular_ico tb__icon tb-users\"> </div>\n            </div>\n            <div className=\"tb_filter_rectangular_button_text\">{languageSetting.filterButton}</div>\n          </div>\n        </div>\n        {\n          (webFilters && webFilters.length > 0) ? webFilters.map((item) => {\n            return <div className={`tb_filter_rectangular_list`} key={item.Network.id} onClick={this.onClickWebFilters(item.Network.id)} tb-data-network={item.Network.id}>\n              <div className={`tb_filter_rectangular_button tb-network-rectangular-ico-${item.Network.icon} ${(networkID && networkID == item.Network.id) && this.props.webFiltersStatus == 2 ? `tb_filter_active` : ``}`} >\n                <div className={`tb_filter_rectangular_icon`}>\n                  <FilterNetworks filterIconClass={'tb_filter_rectangular_ico'} network={item.Network} isDefault={true} />\n                </div>\n                <div className=\"tb_filter_rectangular_button_text\">{item.Network.name}</div>\n              </div>\n            </div>\n          }) : null\n        }\n\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\n  }\n}\nexport default connect(null, mapDispatchToProps)(RectangularFilter);","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { filterPostDataAppendWebFilter } from '../../../../actions/themeActions'\nimport FilterNetworks from \"./Elements/FilterNetworks\";\nclass RoundEdgedFilter extends PureComponent {\n  state = { networkID: null }\n  onClickWebFilters = (networkID) => event => {\n    this.props.changeFilterStatus(2)\n    const tstamp = Math.floor(Date.now() / 1000);\n    const { appendData, wall } = this.props;\n    let postCount = wall.ThemeRule.numberOfPosts;\n    this.props.filterPostDataAppendWebFilter(\n      wall.Wall.id,\n      tstamp,\n      postCount,\n      networkID,\n      appendData.after,\n      appendData.heightEvent,\n      null\n    );\n    this.setState({ networkID: networkID })\n  }\n\n\n  render() {\n    const { webFilters, languageSetting } = this.props;\n    const { networkID } = this.state;\n    return (\n      <div className=\"tb_filter_round_edged_wrapper\">\n        <div className=\"tb_filter_round_edged_list\" onClick={this.onClickWebFilters(0)}> \n          <div className={`tb_filter_round_edged_button_text ${(!networkID) ? `tb_filter_active` : ``}`}>{languageSetting.filterButton}</div>\n        </div>\n        {\n          (webFilters && webFilters.length > 0) ? webFilters.map((item) => {\n\n            return <div key={item.id} className={`tb_filter_round_edged_list`} onClick={this.onClickWebFilters(item.Network.id)}>\n              <div className={`tb_filter_round_edged_button${(networkID && networkID == item.Network.id) && this.props.webFiltersStatus == 2 ? ` tb_filter_active` : ``}`}>\n                <FilterNetworks filterIconClass={'tb_filter_round_edge_ico'} network={item.Network} isDefault={false} />\n              </div>\n            </div>\n          }) : null\n        }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\n  }\n}\nexport default connect(null, mapDispatchToProps)(RoundEdgedFilter);","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { PureComponent } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { filterPostDataAppendWebFilter } from '../../../../actions/themeActions'\nimport FilterNetworks from \"./Elements/FilterNetworks\";\n\nclass SquareFilter extends PureComponent {\n  state = { networkID: null }\n  onClickWebFilters = (networkID) => event => {\n    this.props.changeFilterStatus(2)\n    const tstamp = Math.floor(Date.now() / 1000);\n    const { appendData, wall } = this.props;\n    let postCount = wall.ThemeRule.numberOfPosts;\n    this.props.filterPostDataAppendWebFilter(\n      wall.Wall.id,\n      tstamp,\n      postCount,\n      networkID,\n      appendData.after,\n      appendData.heightEvent,\n      null\n    );\n    this.setState({ networkID: networkID })\n  }\n  render() {\n    const { webFilters } = this.props;\n    const { networkID } = this.state;\n    return (\n      <div className=\"tb_filter_square_wrapper\">\n        <div className=\"tb_filter_square_list\" onClick={this.onClickWebFilters(0)}>\n          <div className={`tb_filter_square_button tb-network-ico-users ${(networkID == 0) && this.props.webFiltersStatus == 2 ? ` tb_filter_active` : ``}`}><div className=\"tb_filter_square_ico tb__icon tb-users\"> </div></div>\n        </div>\n\n        {\n          (webFilters && webFilters.length > 0) ? webFilters.map((item) => {\n            return <div className=\"tb_filter_square_list\" key={uuidv4()} onClick={this.onClickWebFilters(item.Network.id)}>\n              <div className={`tb_filter_square_button tb-network-ico-${item.Network.icon} ${(networkID && networkID == item.Network.id) && this.props.webFiltersStatus == 2 ? ` tb_filter_active` : ``}`} tb-data-network={item.Network.id}>\n                <FilterNetworks filterIconClass={'tb_filter_square_ico'} network={item.Network} isDefault={true} />\n              </div>\n            </div>\n          }) : null\n        }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\n  }\n}\nexport default connect(null, mapDispatchToProps)(SquareFilter);","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterPostDataAppendWebFilter } from \"../../../../actions/themeActions\";\n\nclass TagFilters extends PureComponent {\n    state = {\n        dropDownOffset: 0,\n        networkID: null,\n        tagName: \"\"\n    };\n\n    onClickTagFilters = (tagName) => event => {\n        this.props.changeFilterStatus(1)\n        const tstamp = Math.floor(Date.now() / 1000);\n        const { appendData, wall } = this.props;\n        let postCount = wall.ThemeRule.numberOfPosts;\n        this.props.filterPostDataAppendWebFilter(\n            wall.Wall.id,\n            tstamp,\n            postCount,\n            0,\n            appendData.after,\n            appendData.heightEvent,\n            tagName\n        );\n        this.setState({ tagName: tagName })\n    }\n    onClickWebFilters = (networkID) => event => {\n        this.props.changeFilterStatus(2)\n        const tstamp = Math.floor(Date.now() / 1000);\n        const { appendData, wall } = this.props;\n        let postCount = wall.ThemeRule.numberOfPosts;\n        this.props.filterPostDataAppendWebFilter(\n            wall.Wall.id,\n            tstamp,\n            postCount,\n            networkID,\n            appendData.after,\n            appendData.heightEvent,\n            null\n        );\n        this.setState({ networkID: networkID })\n    }\n    offset(el) {\n        var rect = el.getBoundingClientRect(),\n            scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n            scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\n    }\n    componentDidMount() {\n        var dropDown = document.querySelector('.tb_tag_btn_dropdown');\n        if (dropDown != null) {\n            var dropDownOffset = this.offset(dropDown);\n            if (dropDownOffset.left < 0) {\n                this.setState({\n                    dropDownOffset: 40\n                })\n            }\n        }\n\n    }\n\n\n    render() {\n        const { dropDownOffset, tagName, networkID } = this.state;\n        // const shortFilter = (filters && filters.length) ? filters.sort((a, b) => b.postCount - a.postCount) : []\n        const { N_filters, filter_tags, webFilters, languageSetting } = this.props\n        const T_filter = N_filters ? 3 : 6\n\n        return (\n            <div className=\"tb_tag_filter_container\">\n                {!(webFilters && webFilters.length > 1) ? <div className=\"tb_tag_filter_list\" onClick={this.onClickWebFilters(0)}>\n                    <div className={`tb_tag_btn ${(networkID == 0) && this.props.webFiltersStatus == 2 ? ` tb_active` : ``}`}>{languageSetting.filterButton}</div>\n                </div> : null}\n                {(filter_tags && filter_tags.length) ? filter_tags.map((item, index) => \n                index < T_filter ? \n                    <div key={index} className=\"tb_tag_filter_list\">\n                        <div className={`tb_tag_btn ${item.tagName == tagName && this.props.webFiltersStatus == 1 ? ` tb_active` : ``}`} onClick={this.onClickTagFilters(item.tagName)}>{item.tagName} ({item.postCount})</div>\n                    </div> : null) \n                : null}\n                <div className=\"tb_tag_filter_list\">\n                    {filter_tags && filter_tags.length && filter_tags.length > T_filter ? <> <div className=\"tb_tag_btn\">More <div className=\"tb_tag_btn_arrow tb__icon tb-chevron-down\"></div></div>\n                        <div className=\"tb_tag_btn_dropdown\" style={{ transform: `translate(${dropDownOffset}px, 0px)` }}>\n                            {filter_tags.map((item, index) => index > T_filter - 1 ? <div key={index} className=\"tb_tag_filter_list\">\n                                    <div className={`tb_tag_btn ${item.tagName == tagName && this.props.webFiltersStatus == 1 ? ` tb_active` : ``}`} onClick={this.onClickTagFilters(item.tagName)} >{item.tagName} ({item.postCount})</div>\n                                </div> : null)}\n                        </div>\n                    </> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n\n    return {\n        filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(TagFilters)","import React, { PureComponent, Suspense } from \"react\";\n\nimport CircularFilter from \"./FilterType/CircularFilter\"\nimport RectangularFilter from \"./FilterType/RectangularFilter\"\nimport RoundEdgedFilter from \"./FilterType/RoundEdgedFilter\"\nimport SquareFilter from \"./FilterType/SquareFilter\"\nimport TagFilters from \"./TagFilters\"\nimport './scss/Filters.scss'\n\nexport default class Filters extends PureComponent {\n  state = { webFiltersStatus: 0 }\n  changeFilterStatus = (status) => {\n    this.setState({ webFiltersStatus: status })\n  }\n  render() {\n    const { type, webFilters } = this.props;\n    const { webFiltersStatus } = this.state\n    const N_filters = webFilters && webFilters.length > 1 ? true : false\n\n    return (\n      <div className=\"tb_filter_container\">\n        {N_filters ? type == 1 ?\n          <Suspense fallback={<></>}><CircularFilter webFiltersStatus={webFiltersStatus} changeFilterStatus={this.changeFilterStatus} {...this.props} /></Suspense>\n          : type == 4 ?\n            <Suspense fallback={<></>}><RectangularFilter webFiltersStatus={webFiltersStatus} changeFilterStatus={this.changeFilterStatus} {...this.props} /></Suspense>\n            : type == 2 ?\n              <Suspense fallback={<></>}><RoundEdgedFilter webFiltersStatus={webFiltersStatus} changeFilterStatus={this.changeFilterStatus} {...this.props} /></Suspense>\n              : type == 3 ?\n                <Suspense fallback={<></>}><SquareFilter webFiltersStatus={webFiltersStatus} changeFilterStatus={this.changeFilterStatus} {...this.props} /></Suspense>\n                : null\n          : null}\n        <Suspense fallback={<></>}>\n          <TagFilters N_filters={N_filters} {...this.props} webFiltersStatus={webFiltersStatus} changeFilterStatus={this.changeFilterStatus} />\n        </Suspense>\n      </div>\n    );\n  }\n}\n"],"names":["DefaultNetwork","React","FilterNetworks","PureComponent","render","filterIconClass","network","isDefault","this","props","id","networkClass","className","icon","CircularFilter","state","networkID","onClickWebFilters","event","changeFilterStatus","tstamp","Math","floor","Date","now","appendData","wall","postCount","ThemeRule","numberOfPosts","filterPostDataAppendWebFilter","Wall","after","heightEvent","setState","webFilters","languageSetting","onClick","filterButton","length","map","item","Network","webFiltersStatus","Suspense","fallback","connect","dispatch","wallID","timeStamp","networkId","tagName","RectangularFilter","name","RoundEdgedFilter","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","test","byteToHex","i","push","toString","substr","arr","offset","arguments","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","SquareFilter","uuidv4","TagFilters","dropDownOffset","onClickTagFilters","el","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","top","left","componentDidMount","dropDown","querySelector","N_filters","filter_tags","T_filter","index","style","transform","Filters","status","type"],"sourceRoot":""}