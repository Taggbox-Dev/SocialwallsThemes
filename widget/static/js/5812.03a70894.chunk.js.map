{"version":3,"file":"static/js/5812.03a70894.chunk.js","mappings":"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","sources":["app/Components/UserComponents/SharePost/Elements/SharedSuccess.js","app/Components/UserComponents/SharePost/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\n\nexport default class SharedSuccess extends PureComponent {\n    render() {\n        return <div className=\"tb_share_post_succ\">\n            <div className=\"tb_share_post_succ_00\">\n                <div className=\"tb_share_post_title\">Success</div>\n                <div className=\"tb_share_post_p\">Post shared successfully on email</div>\n                <div className=\"tb_share_post_succ_ico\">\n                    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 98.5 98.5\" enableBackground=\"new 0 0 98.5 98.5\" space=\"preserve\">\n                        <path className=\"tb_share_post_suc_svg\" fill=\"none\" strokeWidth=\"8\" stroke-miterlimit=\"10\" d=\"M81.7,17.8C73.5,9.3,62,4,49.2,4C24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3\" />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    }\n}\n","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { sharePostByEmail, sharePostClosePopUP } from '../../../../actions/themeActions';\nimport SharedSuccess from \"./Elements/SharedSuccess\";\n\n\nconst validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nclass SharePostModal extends PureComponent {\n\n    state = {\n        email: null,\n        emailError: false,\n        submitErrorMessage: null,\n        modalShow: false,\n        successModal: false,\n        loadbtn: false\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.setState({ modalShow: true }), 100);\n        this.popUpCloseClckOnWindow()\n    }\n    onTextEmail = event => {\n        this.setState({ email: event.target.value, emailError: false }, () => {\n            if (this.state.email == null || this.state.email.length == 0 || !validateEmail(this.state.email) || this.state.email.includes(\"mailinator\")) this.setState({ emailError: true })\n        })\n\n    }\n\n    onSubmitData = event => {\n        const { email } = this.state;\n        const { item } = this.props;\n        const userName = this.props.userName;\n        const postLink = this.props.postLink;\n\n        const postData = {image:item.file, rating: item.rating, network: item.network.id, authorImage: item.author.picture, authorName: item.author.name, authorUsername: item.author.username, content: item.content, time: item.createdAt, mediaType : item.type}\n\n\n\n        if ((email && email.length > 0 && validateEmail(email) && !email.includes(\"mailinator\"))) {\n            this.setState({ loadbtn: true })\n            sharePostByEmail({ email: email, username: userName, link: postLink, post_data: postData }).then((response) => {\n                this.setState({ successModal: true, loadbtn: false })\n            })\n                .catch((error) => {\n                    this.setState({ loadbtn: false })\n                    const { data } = error.response;\n                    if (data.response_code == 404) {\n                        this.setState({ submitErrorMessage: data.message })\n                    } else {\n                        this.setState({ submitErrorMessage: 'Something went wrong' })\n                    }\n                });\n        } \n        else {\n            if (this.state.email == null || this.state.email.length == 0 || !validateEmail(this.state.email) || email.includes(\"mailinator\")) this.setState({ emailError: true })\n        }\n    }\n\n    onClose = event => {\n        const { sharePostClosePopUP } = this.props;\n        sharePostClosePopUP();\n    }\n    popUpCloseClckOnWindow=()=>{\n        var self=this;\n        document.addEventListener(\n          \"click\",\n          (event)=>{if(event.target.matches(\".tb_share_post_modal\")){\n            self.props.sharePostClosePopUP()\n          }},\n          false\n        )\n      }\n    render() {\n        const { email, emailError, submitErrorMessage, successModal, modalShow, loadbtn } = this.state;\n        return (\n            <div className={`tb_share_post_modal ${modalShow ? `tb_modal_show` : ``}`}>\n                <div className=\"tb_share_post_container\">\n                    <div className=\"tb_share_post_body\">\n                        <div className=\"tb_share_post_close\" onClick={this.onClose}>\n                            <div className=\"tb_share_close_ico tb__icon tb-close-alt\"> </div>\n                        </div>\n                        {successModal ?\n                            <SharedSuccess />\n                            :\n                            <div className=\"tb_share_post_wrapper\">\n                                <div className=\"tb_share_post_title\">Share This Social Post On Email</div>\n                                <div className=\"tb_share_post_p\">Share the social media post with anyone by entering the email address below.</div>\n\n                                <div className=\"tb_share_post_form\">\n                                    <div className=\"tb_share_post_form_group\">\n                                        <div className=\"tb_share_post_label\">Email <div className=\"tb_share_post_required\">*</div></div>\n                                        <input type=\"email\" value={email} className=\"tb_share_post_input\" onChange={this.onTextEmail} placeholder=\"Enter email address\" />\n                                        {emailError ? <div className=\"tb_share_post_error_\">* Please enter correct email.</div> : null}\n                                    </div>\n                                    <div className=\"tb_share_post_buttons\">\n                                        <div className=\"tb_share_post_cancel\" onClick={this.onClose}>\n                                            Cancel\n                                        </div>\n                                        <div className={`tb_share_post_submit ${loadbtn ? 'tb_share_post_spinner' : ''}`} onClick={this.onSubmitData}>\n                                            Submit\n                                        </div>\n                                    </div>\n                                    {submitErrorMessage && submitErrorMessage.length > 0 ? <div className=\"tb_share_post_error\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                            <g id=\"Stockholm-icons-/-Code-/-Info-circle\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                                <rect id=\"bound\" x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                                <circle id=\"Oval-5\" fill=\"#db4b20\" opacity=\"0.3\" cx=\"12\" cy=\"12\" r=\"10\" />\n                                                <rect id=\"Rectangle-9\" fill=\"#db4b20\" x=\"11\" y=\"10\" width=\"2\" height=\"7\" rx=\"1\" />\n                                                <rect id=\"Rectangle-9-Copy\" fill=\"#db4b20\" x=\"11\" y=\"7\" width=\"2\" height=\"2\" rx=\"1\" />\n                                            </g>\n                                        </svg>\n                                        {submitErrorMessage}\n                                    </div> : null}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        item : state.modalPop.shareData\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        sharePostClosePopUP: () => dispatch(sharePostClosePopUP())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SharePostModal);"],"names":["SharedSuccess","PureComponent","render","className","version","id","xmlns","xlink","x","y","viewBox","enableBackground","space","fill","strokeWidth","d","validateEmail","email","test","String","toLowerCase","SharePostModal","state","emailError","submitErrorMessage","modalShow","successModal","loadbtn","onTextEmail","event","this","setState","target","value","length","includes","onSubmitData","item","props","userName","postLink","postData","image","file","rating","network","authorImage","author","picture","authorName","name","authorUsername","username","content","time","createdAt","mediaType","type","sharePostByEmail","link","post_data","then","response","catch","error","data","response_code","message","onClose","sharePostClosePopUP","popUpCloseClckOnWindow","self","document","addEventListener","matches","componentDidMount","setTimeout","onClick","onChange","placeholder","width","height","stroke","fillRule","opacity","cx","cy","r","rx","connect","modalPop","shareData","dispatch"],"sourceRoot":""}