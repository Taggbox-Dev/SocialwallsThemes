{"version":3,"file":"static/js/6574.c73d23a0.chunk.js","mappings":"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","sources":["app/Components/PostPopUp/DisplayPopUp.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport PopUpMedia from './Elements/PopUpMedia'\nimport PopUpAuthor from './Elements/PopUpAuthor'\nimport PopUpContent from './Elements/PopUpContent' \nimport PopUpBranding from \"./Elements/PopUpBranding\";\nimport { rID } from \"../../../utils\";\n\nclass DisplayPopUp extends PureComponent {\n  state = {\n    isEnable: 0,\n    eventData: {},\n    shareText: \"SHARE\",\n    viewOnText: \"View on\",\n    currentIndex: null,\n    completeData: {},\n    personalization: {},\n    url: null,\n    platform: null,\n    imgData: [],\n    type: \"\",\n    parentID: \"\",\n    isRepeatingPost:false,\n    mediaSize:{\n      height: 500,\n      width: 500,\n    },\n    isDataCount: 0,\n    checktimeout: 0,\n    isPopUpHide:true\n  }\n\n  componentDidMount() {\n    const { data, isShowPopUp } = this.props;\n    if(isShowPopUp) {\n      setTimeout(() => {\n        let p_class = document.querySelector('.tb_app_container')\n        let P_id = rID ? rID : p_class.parentNode.id\n        this.setState({ parentID: P_id })\n        this.getWidgetPopUPEvent(data)\n        setTimeout(() => {\n          var addModal = document.querySelector(`#tb_post_modal_modal-${this.state.parentID}`);\n          if (addModal) addModal.classList.add(\"tb_post_modal_show\");\n          if (data.ThemeRule.themeId != undefined && data.ThemeRule.themeId == 47) if (addModal) addModal.style.overflow = \"hidden\";\n        })\n    \n        var taggBoxRoot = document.getElementsByTagName('html');\n          if (taggBoxRoot && taggBoxRoot[0]) taggBoxRoot[0].style.overflow = \"hidden\";\n          this.loadPopUpWithTimer(true)\n      }, 5000);\n    }\n  }\n\n\n\n  loadPopUpWithTimer = (isFirstTime) => {\n\n    const { wall } = this.props;\n    const { timeForPopup } = wall.ThemeRule\n    const { checktimeout } = this.state;\n\n    const updatetime = ((timeForPopup) * 1000);\n\n    setTimeout(() => {\n\n      const timer = timeForPopup === 0 ? 5000 : updatetime;\n\n      if (checktimeout == 0) this.setState({checktimeout: 1, isPopUpHide: true }, () => isFirstTime ? this.onLoadedPopUp() : setTimeout(this.onLoadedPopUp, timer))\n      else this.setState({ isPopUpHide: false }, () => setTimeout(() => this.onLoadedPopUp(), timer))\n      \n    }, timeForPopup === 0 ? 5000 : updatetime, { position: 1 })\n  }\n\n\n  onLoadedPopUp = () => {\n\n    const { checktimeout, isDataCount } = this.state;\n\n    if (checktimeout == 1) {\n\n      const {  itemData } = this.props;\n\n      const modalPost = document.getElementById('modalPost')\n\n      if (isDataCount >= (itemData.postData.length - 1)) {\n        modalPost.style.display='none'\n        setTimeout (() => this.setState({checktimeout: 0, isDataCount: 0, isPopUpHide: false }, () => this.loadPopUpWithTimer()), 5000)\n      }\n      else {\n        setTimeout (() => this.setState({checktimeout: 0, isDataCount: isDataCount + 1, isPopUpHide: false }, () => this.loadPopUpWithTimer()), 5000)\n        modalPost.style.display='none'\n      }\n    }\n  }\n\n\n  getWidgetPopUPEvent = (data) => {\n    if (data !== undefined && data != \"\" && data.card) {\n      if (data.type == \"post\") {\n        this.setState({\n          url: \"\",\n          isEnable: 1,\n          eventData: data,\n          currentIndex: data.index,\n          completeData: data.idArray,\n          viewOnText: data.viewOnText,\n          shareText: data.shareText,\n          imgData: data.imgData,\n          personalization: data.personalization,\n          type: data.type\n        })\n      }\n      else if (data.type == \"submit-pic\") {\n        this.setState({\n          isEnable: 1,\n          type: data.type,\n          windowParent: data,\n        })\n      }\n    }\n  };\n \n  \n\n  mediaSize = (mediaSize) => {\n    this.setState({\n      mediaSize:{\n        height: mediaSize.height,\n        width: mediaSize.width,\n      }\n    })\n  }\n\n\n  render() {\n    const { wall, languageSetting, brandingNetworks, isShowPopUp } = this.props;\n    const { Personalization, ThemeRule, UserRule, Wall } = wall\n    const { isPopUpHide, isDataCount, completeData, parentID, mediaSize } = this.state;\n    let data = null;\n\n   if (isDataCount === -1) data = completeData[0]; else data = completeData[isDataCount];\n\n    return data && parentID && Object.keys(data).length > 0 && isPopUpHide && isShowPopUp ?  <React.Fragment>\n\n    <div id=\"modalPost\" className={`modalId taggModalShow tb_modal tb_fade  themeModal${Personalization.theme} poweredbytaggbox__ ${isPopUpHide === true ? '' : 'show'}`}>\n    <div className=\"tb_modal_dialog taggModal\">\n      <div className=\"tb_conetent\">\n\n      { data.link || data.network.name ?\n          <div className=\"tb_post_modal_modal_head\">\n            <div className=\"tb_post_modal_modal_header\">\n              <div className=\"tb_post_modal_post_link_small\">\n                <div className=\"tb_post_modal_post_address\">\n                   <div className=\"tb_post_modal_view_link\">\n                    <div className=\"tb_post_modal_view\">{languageSetting.viewOnText} {data.network.name}</div>\n                    <div className=\"tb_post_view_ico tb__icon tb-arrow-right-alt\"> </div>\n                  </div>  \n                </div>\n              </div>\n            </div>\n          </div> : null }\n          \n          <div className=\"tb_post_modal_modal_body\" style={{ backgroundColor: ThemeRule.cardColor }}>\n            {data.type != 1 ? <div className=\"tb_post_modal_details_left\">\n              <PopUpMedia wall={wall} data={data} mediaSizeCallback={this.mediaSize} />\n            </div> : null}\n            <div className={`tb_post_modal_details_right ${data.type === 1 ? 'tb_post_modal_text__' : ''}`} style={{ backgroundColor: data.font.cardColor }}>\n              <div className=\"tb_post_modal_content_wrap\">\n                <div className=\"tb_post_modal_post_detail_wrap popUp_display scroll-hide\">\n                  <div className=\"\">\n                    <PopUpAuthor wall={wall} key={`author_${data.id}`} item={data} ThemeRule={ThemeRule} />\n                    <PopUpContent isDisplay={wall.isDisplay} isPopUpHide={isPopUpHide} timeForPopup={ThemeRule.timeForPopup} key={data.id} ThemeRule={ThemeRule} Personalization={Personalization} item={data} fullContent={data.fullContent} contentData={data.content} contentTitle={data.contentTitle} mediaSize={mediaSize} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            {UserRule.branding && UserRule.branding == 1 ? <PopUpBranding brandingNetworks={brandingNetworks} languageSetting={languageSetting} wallId={Wall.id} /> : null}\n          </div>\n        </div>\n      </div> \n    </div> </React.Fragment> : null\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loaderData: state.loaderData,\n    postHeight: state.postHeight.data\n  }\n}\n\nexport default connect(mapStateToProps)(DisplayPopUp);"],"names":["DisplayPopUp","PureComponent","state","isEnable","eventData","shareText","viewOnText","currentIndex","completeData","personalization","url","platform","imgData","type","parentID","isRepeatingPost","mediaSize","height","width","isDataCount","checktimeout","isPopUpHide","loadPopUpWithTimer","isFirstTime","wall","this","props","timeForPopup","ThemeRule","updatetime","setTimeout","timer","setState","onLoadedPopUp","position","itemData","modalPost","document","getElementById","postData","length","style","display","getWidgetPopUPEvent","data","undefined","card","index","idArray","windowParent","componentDidMount","isShowPopUp","p_class","querySelector","P_id","rID","parentNode","id","addModal","classList","add","themeId","overflow","taggBoxRoot","getElementsByTagName","render","languageSetting","brandingNetworks","Personalization","UserRule","Wall","Object","keys","className","theme","link","network","name","backgroundColor","cardColor","mediaSizeCallback","font","item","isDisplay","fullContent","contentData","content","contentTitle","branding","wallId","connect","loaderData","postHeight"],"sourceRoot":""}