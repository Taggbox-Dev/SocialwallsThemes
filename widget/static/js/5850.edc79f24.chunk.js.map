{"version":3,"file":"static/js/5850.edc79f24.chunk.js","mappings":"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","sources":["app/Components/PostPopUp/Elements/PopUpShare.js","app/Components/PostPopUp/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { sharePostPopUP, themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\n\nclass PopUpShare extends PureComponent {  \n\n    componentDidMount() {\n        if (window.twttr) window.twttr.ready((twttr) => {\n            window.twttr.events.bind('tweet', this.onTwitterClick);\n        });\n        if (window.twttr) window.twttr.ready((twttr) => {\n            window.twttr.events.bind('tweet', this.onTwitterClick);\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (window.twttr) window.twttr.ready((twttr) => {\n            window.twttr.events.bind('tweet', this.onTwitterClick);\n        });\n        if (window.twttr) window.twttr.ready((twttr) => {\n            window.twttr.events.bind('tweet', this.onTwitterClick);\n        });\n    }\n\n\n    onShareFacebooklink = (shareURL) => event => {\n        window.open(shareURL, \"_target\")\n        const { item, wall } = this.props;\n        themePostTracking({\n            type: 2,\n            action: 2,\n            wall: wall.Wall.id,\n            feed: item.feedId,\n            post: item.referenceId ? item.referenceId : item.id,\n            owner: wall.Wall.owner\n        })\n        gtmAnalyticsAction(\"Tagbox\", \"popup_share_click\", \"popup_share\", wall.Wall.id)\n    }\n\n\n    onTwitterClick = event => {\n        const { item, wall } = this.props;\n        if (event) {\n            themePostTracking({\n                type: 2,\n                action: 2,\n                wall: wall.Wall.id,\n                feed: item.feedId,\n                post: item.referenceId ? item.referenceId : item.id,\n                owner: wall.Wall.owner\n            })\n            gtmAnalyticsAction(\"Tagbox\", \"popup_share_click\", \"popup_share\", wall.Wall.id)\n        }\n        window.open(item.share.twitter, \"_target\")\n    }\n\n    linkedinShareCount = (shareURL) => event => {\n        const { item, wall } = this.props;\n        themePostTracking({\n            type: 2,\n            action: 2,\n            wall: wall.Wall.id,\n            feed: item.feedId,\n            post: item.referenceId ? item.referenceId : item.id,\n            owner: wall.Wall.owner\n        })\n        gtmAnalyticsAction(\"Tagbox\", \"popup_share_click\", \"popup_share\", wall.Wall.id)\n        window.open(shareURL, \"_target\")\n    }\n\n    render() {\n        const { sharePostPopUP, item, color } = this.props;\n        const fontStyle = {\n            color: color\n        };\n        return (\n            <div className=\"tb_post_modal_post_footer_social_\">\n                <div className=\"tb_post_modal_share_ico\">\n                    <div className=\"tb_post_modal_social_ico_list___\">\n\n                        <div onClick={this.onShareFacebooklink(item.share.facebook)}>\n                            <div className=\"tb_post_modal_share_button tb__icon tb-facebook\" style={fontStyle}> </div>\n                        </div>\n                    </div>\n                    <div className=\"tb_post_modal_social_ico_list___\" >\n                        <div className=\"tb_post_modal_share_button tb__icon tb-twitter\" onClick={this.onTwitterClick} style={fontStyle}></div>\n                    </div>\n                    <div className=\"tb_post_modal_social_ico_list___\">\n                        <div className=\"tb_post_modal_share_button tb__icon tb-linkedin\" onClick={this.linkedinShareCount(item.share.linkedin)} style={fontStyle}></div>\n                    </div>\n                    {item.link ? <div className=\"tb_post_modal_social_ico_list___\" onClick={event => sharePostPopUP(item)}>\n                        <div className=\"tb_post_modal_share_button tb__icon tb-Mail\" style={fontStyle}> </div>\n                    </div> : null}\n                    {item.link ? <div className=\"tb_post_modal_social_ico_list___ tb_post_link__\" onClick={event => window.open(item.link, \"_blank\")}>\n                        <div className=\"tb_post_modal_share_button tb__icon tb-link\" style={fontStyle}> </div>\n                    </div> : null}\n                </div>\n            </div >\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        sharePostPopUP: (data) => dispatch(sharePostPopUP(data))\n    }\n}\nexport default connect(null, mapDispatchToProps)(PopUpShare);","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport PopUpMedia from './Elements/PopUpMedia'\nimport PopUpAuthor from './Elements/PopUpAuthor'\nimport PopUpShare from './Elements/PopUpShare'\nimport PopUpContent from './Elements/PopUpContent'\nimport { closePopUP, reportMediaPopUp, getDataNextSteps, managePostHeight } from '../../../actions/themeActions'\nimport PopUpBranding from \"./Elements/PopUpBranding\";\nimport { rID } from \"../../../utils\";\nimport './scss/PostPopupSplide.scss'\nimport './scss/PostPopup.scss'\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport InteractiveEmoji from \"../../Themes/Elements/InteractiveEmoji\";\n\nclass PostPopUp extends PureComponent {\n  state = {\n    isEnable: 0,\n    eventData: {},\n    shareText: \"SHARE\",\n    viewOnText: \"View on\",\n    currentIndex: null,\n    completeData: {},\n    personalization: {},\n    url: null,\n    platform: null,\n    imgData: [],\n    type: \"\",\n    parentID: \"\",\n    isRepeatingPost: false,\n    mediaSize: {\n      height: 500,\n      width: 500,\n    }\n  }\n\n\n  keyboardEvent = (event) => {\n    let index = this.state.currentIndex\n    if (event.keyCode == 39 || event.keyCode == 40) {\n      index += 1;\n      this.featuredPopSliderChangeIndex(index)(event)\n    } else if (event.keyCode == 37 || event.keyCode == 38) {\n      index -= 1;\n      this.featuredPopSliderChangeIndex(index)(event)\n    } else if (event.keyCode == 27) {\n      this.closeWidgetPopUP()\n    }\n  };\n\n\n  componentDidMount() {\n    const { data } = this.props;\n    let p_class = document.querySelector('.tb_app_container')\n    let P_id = rID ? rID : p_class.parentNode.id\n    this.setState({ parentID: P_id })\n    this.getWidgetPopUPEvent(data)\n    setTimeout(() => {\n      var addModal = document.querySelector(`#tb_post_modal_modal-${this.state.parentID}`);\n      if (addModal) addModal.classList.add(\"tb_post_modal_show\");\n\n\n      if (data.ThemeRule.themeId != undefined && data.ThemeRule.themeId == 47) {\n        if (addModal) addModal.style.overflow = \"hidden\";\n      }\n    })\n\n    \n\n    var taggBoxRoot = document.getElementsByTagName('html');\n    if (taggBoxRoot && taggBoxRoot[0]) {\n      taggBoxRoot[0].style.overflow = \"hidden\";\n    }\n    this.popUpCloseClckOnWindow()\n\n    window.addEventListener && window.addEventListener('keydown', this.keyboardEvent);\n\n    AOS.init();\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyboardEvent);\n  }\n  componentDidUpdate() {\n\n    const self = this;\n    let modalAction = 0;\n\n    if (window.editor) {\n      let modal = document.getElementById(\"tb_post_modal_modal-taggbox_main\");\n      let modalBody = document.querySelector(\".tb_post_modal_conetent\");\n      let nextBtn = document.querySelector(\".tb_post_modal_nxt_btn\");\n      let previusButton = document.querySelector(\".tb_post_modal_prev_btn\");\n      if (modal) {\n        if (modalBody) { modalBody.onclick = () => modalAction = 1 }\n        if (nextBtn) { nextBtn.onclick = () => modalAction = 1 }\n        if (previusButton) { previusButton.onclick = () => modalAction = 1 }\n\n        modal.onclick = () => {\n          if (modalAction == 0) {\n            self.onCloseModal()\n          }\n          modalAction = 0;\n        };\n      }\n    }\n  }\n\n\n  onCloseModal = () => {\n    var addModal = document.querySelector(`#tb_post_modal_modal-${this.state.parentID}`);\n    if (addModal && addModal.classList.contains(\"tb_post_modal_show\")) {\n      addModal.classList.remove(\"tb_post_modal_show\")\n      this.setState({ isEnable: 0, currentIndex: null, type: \"\" }, this.props.closePopUP());\n    }\n\n    var taggBoxRoot = document.getElementsByTagName('html');\n    if (taggBoxRoot && taggBoxRoot[0]) {\n      taggBoxRoot[0].style.overflow = \"\";\n    }\n  }\n  closeWidgetPopUP = event => this.onCloseModal()\n\n  getWidgetPopUPEvent = (data) => {\n\n    if (data && data!== undefined && data.card) {\n      if (data.type == \"post\") {\n        this.setState({\n          url: \"\",\n          isEnable: 1,\n          eventData: data,\n          currentIndex: data.index,\n          completeData: data.idArray,\n          viewOnText: data.viewOnText,\n          shareText: data.shareText,\n          imgData: data.imgData,\n          personalization: data.personalization,\n          type: data.type\n        })\n      }else if (data.type == \"submit-pic\") {\n        this.setState({ isEnable: 1, type: data.type, windowParent: data });\n      }\n    }\n\n  };\n  featuredPopSliderChangeIndex = (currentIndex) => event => {\n    const { eventData, isRepeatingPost } = this.state;\n    if (((eventData.idArray.length - 1) == currentIndex || currentIndex === eventData.idArray.length) && !isRepeatingPost) {\n      this.loadMore()\n    }\n    else {\n      if (currentIndex === eventData.idArray.length - 1 || currentIndex === eventData.idArray.length) {\n        this.setState({ currentIndex: 0, isRepeatingPost: false });\n      } else if (currentIndex === -1) {\n        this.setState({ currentIndex: eventData.idArray.length - 1, isRepeatingPost: false });\n      } else {\n        this.setState({ currentIndex: currentIndex, isRepeatingPost: false });\n      }\n    }\n  };\n  componentWillReceiveProps(nextProps) {\n    const { postData } = nextProps;\n    let { completeData, eventData } = this.state\n    if (completeData.length != postData.postData.length) {\n\n      // let item = completeData[currentIndex]\n      let updatePostData = postData.postData.map(pItem => postData.completeDataObject[pItem])\n      let filteredPostData = updatePostData.filter((filterData) => !String(filterData.id).includes(\"free_add_\"))\n\n      eventData.idArray = filteredPostData\n      this.setState({ completeData: filteredPostData, eventData }, () => {\n        const { currentIndex } = this.state;\n        this.setState({ currentIndex: currentIndex + 1 })\n      })\n    }\n    else {\n      const hasMoreData = postData.hasMoreData && Object.keys(postData.hasMoreData).length > 0 ? postData.hasMoreData[0] && postData.hasMoreData[0].hasMoreData == false ? false : postData.hasMoreData[postData.appendData.networkID] ? postData.hasMoreData[postData.appendData.networkID].hasMoreData : true : true\n      if (!hasMoreData) {\n        // this.setState({ currentIndex: 0 })\n      }\n    }\n\n\n\n  }\n  loadMore = () => {\n    const { wall, postData, postHeight } = this.props;\n    const { eventData, currentIndex } = this.state;\n\n    const hasMoreData = postData.hasMoreData && Object.keys(postData.hasMoreData).length > 0 ? postData.hasMoreData[0] && postData.hasMoreData[0].hasMoreData == false ? false : postData.hasMoreData[postData.appendData.networkID] ? postData.hasMoreData[postData.appendData.networkID].hasMoreData : true : true\n    if (eventData.idArray.length - 1 == currentIndex) {\n      this.setState({ isRepeatingPost: true });\n    }\n    if (hasMoreData) {\n      const postCount = wall.ThemeRule.numberOfPosts;\n      const timeStamp = Math.floor(Date.now() / 1000);\n      this.props.managePostHeight(postHeight);\n      this.props.getDataNextSteps(wall.Wall.id, timeStamp, postCount, postData.appendData.networkID, postData.appendData.after, postData.appendData.heightEvent);\n    }\n    else {\n      this.setState({ currentIndex: 0 })\n    }\n\n  }\n  popUpCloseClckOnWindow = () => {\n    document.addEventListener(\n      \"click\",\n      (event) => {\n        if (event.target.matches(`#tb_post_modal_modal-${this.state.parentID}`)) {\n          this.onCloseModal()\n        }\n      }\n    )\n  }\n\n  mediaSize = (mediaSize) => {\n    this.setState({\n      mediaSize: {\n        height: mediaSize.height,\n        width: mediaSize.width,\n      }\n    })\n  }\n\n  render() {\n    const { wall, reportMediaPopUp, languageSetting, brandingNetworks } = this.props;\n    const { currentIndex, completeData, eventData, parentID, mediaSize } = this.state;\n    let data = null;\n    if (currentIndex === -1) data = completeData[eventData.idArray.length - 1];\n    else data = completeData[currentIndex];\n    const popupSlideShow = (wall.Personalization.popupSlideShow == 1) ? true : false\n    const intractiveData = localStorage.getItem(`intractivelike${wall.Wall.id}`) || [];\n\n    return data && parentID && Object.keys(data).length > 0 ? <div className=\"tb_post_modal_modal\" id={`tb_post_modal_modal-${parentID}`}>\n      <div className=\"tb_post_modal_modal_dialog\">\n        <div className=\"tb_post_modal_conetent\" data-aos=\"zoom-in-up\">\n          <div className=\"tb_post_modal_modal_head\">\n            <div className=\"tb_post_modal_modal_header\">\n              <div className=\"tb_post_modal_post_link_small\">\n                <div className=\"tb_post_modal_post_address\">\n                  {data.link ? <div className=\"tb_post_modal_view_link\" onClick={event => window.open(data.link, \"_blank\")}>\n                    <div className=\"tb_post_modal_view\">{languageSetting.viewOnText} {data.network.name}</div>\n                    <div className=\"tb_post_view_ico tb__icon tb-arrow-right-alt\"> </div>\n                  </div> : null}\n                </div>\n              </div>\n              <div className=\"tb_post_modal_close_wrap\">\n                <div className=\"tb_post_modal_close_btn\" onClick={this.closeWidgetPopUP}>\n                  <div className=\"tb_post_close_ico tb__icon tb-close-alt\"> </div>\n                </div>\n              </div>\n            </div>\n            {popupSlideShow ? <div className={`tb_post_modal_navigation tb_post_modal_nav_content ${data.type === 1 ? 'tb_post_modal_text_nav__' : null}`}>\n              <div className=\"tb_post_modal_nav tb_post_modal_prev_btn\" onClick={this.featuredPopSliderChangeIndex(currentIndex - 1)}>\n                <div className=\"tb_post_nav tb__icon tb-arrow-left-alt\"> </div>\n              </div>\n              <div className=\"tb_post_modal_nav tb_post_modal_nxt_btn\" onClick={this.featuredPopSliderChangeIndex(currentIndex + 1)}>\n                <div className=\"tb_post_nav tb__icon tb-arrow-right-alt\"> </div>\n              </div>\n            </div> : null}\n          </div>\n          <div className=\"tb_post_modal_modal_body\" style={{ backgroundColor: wall.ThemeRule.cardColor }}>\n            {data.type != 1 ? <div className=\"tb_post_modal_details_left\">\n              {popupSlideShow ? <div className=\"tb_post_modal_navigation tb_post_modal_nav_img\">\n                <div className=\"tb_post_modal_nav tb_post_modal_prev_btn\" onClick={this.featuredPopSliderChangeIndex(currentIndex - 1)}>\n                  <div className=\"tb_post_nav tb__icon tb-arrow-left-alt\"> </div>\n                </div>\n                <div className=\"tb_post_modal_nav tb_post_modal_nxt_btn\" onClick={this.featuredPopSliderChangeIndex(currentIndex + 1)}>\n                  <div className=\"tb_post_nav tb__icon tb-arrow-right-alt\"> </div>\n                </div>\n              </div> : null}\n              <PopUpMedia data={data} wall={wall} mediaSizeCallback={this.mediaSize} />\n            </div> : null}\n            <div className={`tb_post_modal_details_right ${data.type === 1 ? 'tb_post_modal_text__' : ''}`} style={{ backgroundColor: data.font.cardColor }}>\n              <div className=\"tb_post_modal_content_wrap\">\n                <div className=\"tb_post_modal_post_detail_wrap\">\n                  <PopUpAuthor wall={wall} key={`author_${data.id}`} item={data} ThemeRule={wall.ThemeRule} Personalization={wall.Personalization} ownerId={wall.Wall.owner} />\n                  <PopUpContent key={data.id} isDisplay={wall.isDisplay}  ThemeRule={wall.ThemeRule} Personalization={wall.Personalization} item={data} contentData={data.content} contentTitle={data.contentTitle} mediaSize={mediaSize} />\n                </div>\n                <div className=\"tb_post_modal_post_footer\">\n                  <div className=\"tb_post_modal_report_socail\">\n                    <div className=\"tb_post_modal_post_footer_report\" onClick={event => reportMediaPopUp(data)}>\n                      <div className=\"tb_post_modal_post_report_media_btn_wrap__\">\n                        <div className=\"tb_post_modal_post_report_media_btn__\" style={{\n                          color: data.font.fontColor\n                        }}>Report</div>\n                      </div>\n                    </div>\n                    <PopUpShare item={data} wall={wall} color={wall.ThemeRule.fontColor} />\n                  </div>\n                  {!wall.isDisplay && wall.Personalization.interactive ? \n                    <InteractiveEmoji {...{isCard: null, postId: data.id, intractiveData, userDetail: wall.UserDetail, wallId: wall.Wall, interactiveCount: data.interactiveCount, isDisplay: wall.isDisplay, interactive: wall.Personalization.interactive, interactiveStatus: wall.Personalization.interactiveStatus }} key={data.id}/> : null\n                  }  \n                </div>\n              </div>\n            </div>\n            {wall.UserRule.branding && wall.UserRule.branding == 1 ? <PopUpBranding brandingNetworks={brandingNetworks} languageSetting={languageSetting} wallId={wall.Wall.id} /> : null}\n          </div>\n        </div>\n      </div>\n    </div> : null\n\n\n  }\n}\nconst mapStateToProps = state => {\n\n  return {\n    loaderData: state.loaderData,\n    postHeight: state.postHeight.data\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopUP: (data) => dispatch(closePopUP(data)),\n    reportMediaPopUp: (data) => dispatch(reportMediaPopUp(data)),\n    managePostHeight: (data) => dispatch(managePostHeight(data)),\n    getDataNextSteps: (wallID, timeStamp, postCount, networkId, after, heightEvent, updateInStateNow) => dispatch(getDataNextSteps(wallID, timeStamp, postCount, networkId, after, heightEvent, updateInStateNow))\n\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPopUp);"],"names":["PopUpShare","PureComponent","onShareFacebooklink","shareURL","event","window","open","item","wall","this","props","themePostTracking","type","action","Wall","id","feed","feedId","post","referenceId","owner","gtmAnalyticsAction","onTwitterClick","share","twitter","linkedinShareCount","componentDidMount","twttr","ready","events","bind","componentWillReceiveProps","nextProps","render","sharePostPopUP","color","fontStyle","className","onClick","facebook","style","linkedin","link","connect","dispatch","data","PostPopUp","state","isEnable","eventData","shareText","viewOnText","currentIndex","completeData","personalization","url","platform","imgData","parentID","isRepeatingPost","mediaSize","height","width","keyboardEvent","index","keyCode","featuredPopSliderChangeIndex","closeWidgetPopUP","onCloseModal","addModal","document","querySelector","classList","contains","remove","setState","closePopUP","taggBoxRoot","getElementsByTagName","overflow","getWidgetPopUPEvent","undefined","card","idArray","windowParent","length","loadMore","postData","postHeight","hasMoreData","Object","keys","appendData","networkID","postCount","ThemeRule","numberOfPosts","timeStamp","Math","floor","Date","now","managePostHeight","getDataNextSteps","after","heightEvent","popUpCloseClckOnWindow","addEventListener","target","matches","p_class","P_id","rID","parentNode","setTimeout","add","themeId","AOS","componentWillUnmount","removeEventListener","componentDidUpdate","self","modalAction","editor","modal","getElementById","modalBody","nextBtn","previusButton","onclick","filteredPostData","map","pItem","completeDataObject","filter","filterData","String","includes","reportMediaPopUp","languageSetting","brandingNetworks","popupSlideShow","Personalization","intractiveData","localStorage","getItem","network","name","backgroundColor","cardColor","PopUpMedia","mediaSizeCallback","font","PopUpAuthor","ownerId","PopUpContent","isDisplay","contentData","content","contentTitle","fontColor","interactive","InteractiveEmoji","isCard","postId","userDetail","UserDetail","wallId","interactiveCount","interactiveStatus","key","UserRule","branding","PopUpBranding","loaderData","wallID","networkId","updateInStateNow"],"sourceRoot":""}