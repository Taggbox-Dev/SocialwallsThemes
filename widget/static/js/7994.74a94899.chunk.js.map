{"version":3,"file":"static/js/7994.74a94899.chunk.js","mappings":"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","sources":["app/Components/UserComponents/submitPic/uppyLoader.js","app/Components/UserComponents/submitPic/uppyUpload.js","app/Components/UserComponents/submitPic/upload.js"],"sourcesContent":["import React from 'react';\nconst UppyUploader = () => {\n    return <div className=\"uppy-Root uppy-StatusBar is-postprocessing\" aria-hidden=\"false\" dir=\"ltr\">\n        <div className=\"uppy-StatusBar-progress is-indeterminate\" role=\"progressbar\" aria-label=\"100%\" aria-valuetext=\"100%\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"100\" style={{ width: `100%` }}></div>\n        <div className=\"uppy-StatusBar-content\">\n            <svg className=\"uppy-StatusBar-spinner\" aria-hidden=\"true\" focusable=\"false\" width=\"14\" height=\"14\">\n                <path d=\"M13.983 6.547c-.12-2.509-1.64-4.893-3.939-5.936-2.48-1.127-5.488-.656-7.556 1.094C.524 3.367-.398 6.048.162 8.562c.556 2.495 2.46 4.52 4.94 5.183 2.932.784 5.61-.602 7.256-3.015-1.493 1.993-3.745 3.309-6.298 2.868-2.514-.434-4.578-2.349-5.153-4.84a6.226 6.226 0 0 1 2.98-6.778C6.34.586 9.74 1.1 11.373 3.493c.407.596.693 1.282.842 1.988.127.598.073 1.197.161 1.794.078.525.543 1.257 1.15.864.525-.341.49-1.05.456-1.592-.007-.15.02.3 0 0\" fillRule=\"evenodd\"></path>\n            </svg>\n      Uploading...\n   </div>\n    </div>\n}\n\nexport default UppyUploader;","import Uppy from '@uppy/core';\nimport Transloadit from '@uppy/transloadit';\nimport { suiteTrack } from '../../../../actions/api';\n\nconst uppyKey = '0701d3d7f8d94e92a65a9cba388b1d96';\nconst uppyBucket = 'cloud.tagbox.com';\nconst uppyAwsKey = '47ABVORKG52UYE1KB28S';\nconst uppyAwsSecret = 'pcaTfeokaz28geAAns08H3yaGbOVz6ILgTptu19v';\n\n\n\nclass UppyUpload {\n    constructor(beforeFileAdded, beforeUpload) {\n        let uploadPath = 'media/tmpimages/';\n        let bucket = uppyBucket;\n        if (suiteTrack) {\n            uploadPath = `ugc-suite/tmp/`;\n            bucket = 'cloud.tagbox.com';\n        }\n        this.uppy = new Uppy({\n            meta: { type: 'avatar' },\n            autoProceed: true,\n            debug: true,\n            allowMultipleUploads: true,\n            restrictions: {\n                maxFileSize: 104857600,\n                maxNumberOfFiles: 1,\n                minNumberOfFiles: 1,\n                allowedFileTypes: ['image/*', 'video/*']\n            },\n            onBeforeFileAdded: beforeFileAdded,\n            onBeforeUpload: beforeUpload\n        })\n\n        this.uppy.use(Transloadit, {\n            params: {\n                auth: {\n                    key: uppyKey\n                },\n                steps: {\n                    store: {\n                        robot: '/wasabi/store',\n                        bucket_region: \"us-west-1\",\n                        result: true,\n                        bucket: bucket,\n                        key: uppyAwsKey,\n                        secret: uppyAwsSecret,\n                        path: uploadPath + '${file.id}.${file.ext}'\n                    }\n                }\n            },\n            waitForEncoding: true\n            // }).use(Compressor, {\n            //     quality: 0.8\n        });\n    }\n}\n\nexport default UppyUpload;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { DragDrop, StatusBar } from '@uppy/react';\nimport '@uppy/core/dist/style.css'\n//import '@uppy/drag-drop/dist/style.css'\n//import '@uppy/status-bar/dist/style.css'\nimport UppyUploader from './uppyLoader'\nimport UppyUpload from './uppyUpload'\nimport { suiteTrack, VIDEO_COMPRESS } from '../../../../actions/api'\nimport { bytesToSize, tb_onsite_btn_disabled } from '../../../../utils'\nimport { CloudHostUrl } from '../../../../constants'\n\nclass Uploads extends Component {\n    state = {\n        isLoading: false,\n        selectedFile: null,\n        selectedUrl: null,\n        type: null,\n        thumb_file: \"\",\n        fileSize: false,\n        filemaxSize: 0,\n        throwError: false,\n        videoPath: \"\",\n        fileSizeText: \"\",\n        ext: null, size: 0,\n        fileName: null,\n        mediaHeight: 0,\n        mediaWidth: 0\n    }\n    beforeFileAdded = (currentFile, files) => {\n        // console.log(\"before update\", currentFile, files)\n\n        tb_onsite_btn_disabled(1)\n        const { size, sizeText } = bytesToSize(currentFile.size);\n        //console.log(\"bytesToSize\", size, sizeText)\n        if (['GB', 'TB'].includes(sizeText)) {\n            this.setState({ fileSize: true, fileSizeText: `${size}${sizeText}` }, () => setTimeout(() => this.setState({ fileSize: false, fileSizeText: \"\" }), 2000))\n            tb_onsite_btn_disabled(2)\n\n        }\n        else if (sizeText == \"MB\") {\n\n            const fileType = currentFile.meta.type.includes('image') ? 4 : 5;\n            const maxuploadSize = fileType == 4 ? 15 : 100;\n\n            if (size >= maxuploadSize) {\n                this.setState({ type: fileType, filemaxSize: maxuploadSize, fileSize: true, fileSizeText: `${size}${sizeText}` }, () => setTimeout(() => this.setState({ fileSize: false, fileSizeText: \"\" }), 5000))\n                tb_onsite_btn_disabled(2)\n                return false\n            }\n        }\n    }\n\n    beforeUpload = (files) => {\n        const fileKeys = Object.keys(files);\n\n        if (fileKeys && fileKeys.length > 0 && files[fileKeys[0]] && files[fileKeys[0]].meta && files[fileKeys[0]].meta.type.includes(\"video\")) {\n            try {\n                const { onsite_token } = this.props;\n                this.setState({ isLoading: true })\n                const updateFiles = files[fileKeys[0]];\n                //console.log(\"files\", updateFiles)\n                const data = new FormData();\n                data.append(\"file\", updateFiles.data);\n                data.append(\"onsite_token\", onsite_token);\n                axios.post(VIDEO_COMPRESS, data).then((response) => {\n                    const { responseData } = response.data;\n                    if (responseData && responseData.length > 0) {\n                        this.setState({\n                            videoPath: responseData[0].sscode, isLoading: false, type: 5, selectedFile: responseData[0].s3Url, selectedUrl: responseData[0].s3Url, thumb_file: responseData[0].s3ThumbUrl, ext: updateFiles.extension, size: updateFiles.size, fileName: updateFiles.name, mediaHeight: responseData[0].height,\n                            mediaWidth: responseData[0].width\n                        }, () => this.onUpdateLocalState())\n                        tb_onsite_btn_disabled(2)\n                    } //console.log('ccc');\n                    //console.log(\"VIDEO_COMPRESS response\", response)\n                }).catch((error) => {\n                    this.setState({ isLoading: false, throwError: true }, () => setTimeout(() => this.setState({ throwError: false }), 2000))\n                    this.uppyUploader.uppy.reset()\n                    tb_onsite_btn_disabled(2)\n                })\n            }\n            catch (ex) {\n                this.setState({ isLoading: false, throwError: true }, () => setTimeout(() => this.setState({ throwError: false }), 2000))\n                this.uppyUploader.uppy.reset()\n                tb_onsite_btn_disabled(2)\n            }\n            return false;\n        }\n    }\n    uppyUploader = new UppyUpload(this.beforeFileAdded, this.beforeUpload)\n    componentDidMount() {\n\n        this.uppyUploader.uppy.on('transloadit:result', (stepName, result) => {\n\n            const height = result.meta.orientation && result.meta.orientation == \"Rotate 90 CW\" ? result.meta.width : result.meta.height;\n            const width = result.meta.orientation && result.meta.orientation == \"Rotate 90 CW\" ? result.meta.height : result.meta.width;\n            let uploadPath = `${CloudHostUrl}media/tmpimages/`;\n            if (suiteTrack) uploadPath = `https://cloud.tagbox.com/ugc-suite/tmp/`;\n            this.setState({\n                type: result.mime.includes(\"video\") ? 5 : 4, selectedFile: result.id, selectedUrl: `${uploadPath}${result.id}.${result.ext}`, ext: result.ext, size: result.size, fileName: result.name, mediaHeight: height,\n                mediaWidth: width\n            }, () => this.onUpdateLocalState())\n            tb_onsite_btn_disabled(2)\n        })\n        this.uppyUploader.uppy.on('file-removed', (file, reason) => {\n            tb_onsite_btn_disabled(2)\n        })\n\n    }\n\n    onUpdateLocalState = () => {\n        const { addPostImage, isActiveIndex } = this.props;\n        const { selectedUrl, type, thumb_file, videoPath, ext, size, fileName, mediaHeight, mediaWidth } = this.state;\n        addPostImage(selectedUrl, type === 5 ? thumb_file : selectedUrl, videoPath, type, isActiveIndex, ext, size, fileName, mediaHeight, mediaWidth)\n        this.setState({\n            selectedFile: null,\n            selectedUrl: null,\n            type: null,\n            thumb_file: \"\",\n            fileSize: false,\n            fileSizeText: \"\",\n            videoPath: \"\",\n            ext: null, size: 0, fileName: null, mediaHeight: 0, mediaWidth: 0\n        }, () => this.uppyUploader.uppy.reset())\n    }\n\n    render() {\n        const { isLoading, fileSize, throwError, fileSizeText, filemaxSize, type } = this.state;\n        const { snapContent } = this.props;\n        return <>\n            <DragDrop\n                note={snapContent.contentSize}\n                uppy={this.uppyUploader.uppy}\n                allowMultipleFiles={false}\n\n                locale={{\n                    strings: {\n                        // Text to show on the droppable area.\n                        // `%{browse}` is replaced with a link that opens the system file selection dialog.\n                        dropHereOr: snapContent.uploadText,\n                        // Used as the label for the link that opens the system file selection dialog.\n                        browse: '',\n                    },\n                }}\n            />\n\n            <div className=\"tb_onsite_uploader_status\">\n                <StatusBar\n                    uppy={this.uppyUploader.uppy}\n                    hideUploadButton\n                    hideAfterFinish={false}\n                    showProgressDetails\n                />\n                {isLoading ? <UppyUploader /> : null}\n                {fileSize ? <div className=\"tb_onsite_uploader_limit_error submit_limit_size\" style={{ marginTop: 5, display: `flex`, alignItems: `center` }}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                        <g id=\"Stockholm-icons-/-Code-/-Info-circle\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                            <rect id=\"bound\" x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                            <circle id=\"Oval-5\" fill=\"#db4b20\" opacity=\"0.3\" cx=\"12\" cy=\"12\" r=\"10\" />\n                            <rect id=\"Rectangle-9\" fill=\"#db4b20\" x=\"11\" y=\"10\" width=\"2\" height=\"7\" rx=\"1\" />\n                            <rect id=\"Rectangle-9-Copy\" fill=\"#db4b20\" x=\"11\" y=\"7\" width=\"2\" height=\"2\" rx=\"1\" />\n                        </g>\n                    </svg>\n                    {snapContent.limitErr.replace('--size--', fileSizeText)}\n                </div> : null}\n                {throwError ? <div className=\"tb_onsite_uploader_limit_error submit_limit_size\" style={{ marginTop: 5, display: `flex`, alignItems: `center` }}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                        <g id=\"Stockholm-icons-/-Code-/-Info-circle\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                            <rect id=\"bound\" x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                            <circle id=\"Oval-5\" fill=\"#db4b20\" opacity=\"0.3\" cx=\"12\" cy=\"12\" r=\"10\" />\n                            <rect id=\"Rectangle-9\" fill=\"#db4b20\" x=\"11\" y=\"10\" width=\"2\" height=\"7\" rx=\"1\" />\n                            <rect id=\"Rectangle-9-Copy\" fill=\"#db4b20\" x=\"11\" y=\"7\" width=\"2\" height=\"2\" rx=\"1\" />\n                        </g>\n                    </svg>\n                    Something went wrong , Please try again.\n                </div> : null}\n            </div>\n        </>\n    }\n}\n\nexport default Uploads;"],"names":["className","dir","role","style","width","focusable","height","d","fillRule","constructor","beforeFileAdded","beforeUpload","uploadPath","bucket","suiteTrack","this","uppy","Uppy","meta","type","autoProceed","debug","allowMultipleUploads","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","onBeforeFileAdded","onBeforeUpload","use","Transloadit","params","auth","key","steps","store","robot","bucket_region","result","secret","path","waitForEncoding","Uploads","Component","state","isLoading","selectedFile","selectedUrl","thumb_file","fileSize","filemaxSize","throwError","videoPath","fileSizeText","ext","size","fileName","mediaHeight","mediaWidth","currentFile","files","tb_onsite_btn_disabled","sizeText","bytesToSize","includes","setState","setTimeout","fileType","maxuploadSize","fileKeys","Object","keys","length","onsite_token","props","updateFiles","data","FormData","append","axios","VIDEO_COMPRESS","then","response","responseData","sscode","s3Url","s3ThumbUrl","extension","name","onUpdateLocalState","catch","error","uppyUploader","reset","ex","UppyUpload","addPostImage","isActiveIndex","componentDidMount","on","stepName","orientation","CloudHostUrl","mime","id","file","reason","render","snapContent","note","contentSize","allowMultipleFiles","locale","strings","dropHereOr","uploadText","browse","hideUploadButton","hideAfterFinish","showProgressDetails","marginTop","display","alignItems","xmlns","viewBox","version","stroke","strokeWidth","fill","x","y","opacity","cx","cy","r","rx","limitErr","replace"],"sourceRoot":""}