{"version":3,"file":"static/js/1013.a87a5cba.chunk.js","mappings":"kKAEA,MAAMA,GAAYC,EAAAA,EAAAA,MAOlB,EANsB,IAAuB,IAAtB,aAAEC,GAAmB,EAC1C,OAAO,gBAAKC,UAAU,qBAAf,UACL,cAAGC,KAAI,UAAKJ,EAAYK,EAAAA,GAAgBC,EAAAA,IAAjC,OAAgDC,EAAAA,IAAhD,OAA2DL,GAAgBM,OAAQ,SAAUL,UAAU,yBAAyBM,MAAO,CAAGC,gBAAgB,QAAD,OAAWV,EAAU,wEAAD,UAA8EW,EAAAA,GAA9E,oCAApB,OAAhK,gBADF,C,uHCFF,MAAMX,GAAaC,EAAAA,EAAAA,OAAqBW,OAAOC,SAAST,KAAKU,SAAS,eAatE,EAVqB,IAAiB,IAAhB,OAAEC,GAAa,EACjC,OAAO,gBAAKZ,UAAU,wBAAf,UACH,gBAAKA,UAAU,uBAAf,SACMY,GAAqJ,iCACnJ,mBAAQC,QAAS,KAAMC,EAAAA,EAAAA,IAAc,GAAId,UAAU,uBAAuBM,MAAO,CAAES,YAAa,QAAhG,+BACA,mBAAQF,QAAS,KAAMC,EAAAA,EAAAA,IAAc,GAAId,UAAU,sCAAnD,iCAFO,cAAGC,KAAI,UAAKJ,EAAYmB,EAAAA,GAAiBC,EAAAA,IAAlC,OAA2Cb,EAAAA,GAA3C,cAAiEC,OAAQ,SAAUL,UAAU,uBAApG,2BAFnB,E,eCDJ,MAmBA,EAnBqB,IAA0C,IAAzC,OAAEY,EAAF,MAAUM,EAAV,YAAiBC,EAAjB,IAA8BC,GAAU,EAU5D,OAREC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAUC,SAASC,eAAe,kBAGxC,OAFGF,GAASA,EAAQG,iBAAiB,SAAS,KAAMX,EAAAA,EAAAA,IAAc,KAE3D,KAAWQ,GAASA,EAAQG,iBAAiB,SAAS,KAAMX,EAAAA,EAAAA,IAAc,IAAtD,CAA3B,GAED,KAEE,iBAAKd,UAAU,wBAAf,WACL,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,iBAAf,SAAiCkB,KACjC,gBAAKlB,UAAU,eAAf,UAA+B0B,EAAAA,EAAAA,IAAgBP,MAC/C,SAAC,EAAD,CAAcP,OAAQA,OAEtBA,EAAgD,MAAvC,SAACe,EAAA,EAAD,CAAe5B,aAAcqB,MAN1C,C","sources":["app/Components/ErrorPages/Elements/ErrorBranding.js","app/Components/ErrorPages/Elements/ErrorButtons.js","app/Components/ErrorPages/Elements/ErrorMessage.js"],"sourcesContent":["import { CloudUrl, WebWidgetUrl, ErrorUTM, WebDisplayUrl } from \"../../../../constants\";\nimport { isDisplayActive } from \"../../../../utils\";\nconst isDisplay = isDisplayActive()\nconst ErrorBranding = ({ utm_campaign }) => {\n  return <div className=\"tb_error_page_logo\">\n    <a href={`${isDisplay ? WebDisplayUrl : WebWidgetUrl}${ErrorUTM}${utm_campaign}`} target={'_blank'} className=\"tb_error_page_logo_ico\" style={{  backgroundImage: `url( ${ isDisplay?'https://cloud.tagbox.com/app/theme/display/images/taggbox-display.svg' : `${CloudUrl}/media/images/taggbox-widget.svg`} )`\n    }}> </a>\n  </div>\n}\nexport default ErrorBranding\n","import { AppUrl, ErrorUTM, socialwallsUrl } from \"../../../../constants\";\nimport { isDisplayActive, onWindowEvent } from \"../../../../utils\";\nconst isDisplay =  isDisplayActive() || window.location.href.includes(\"social-wall\");\n\n\nconst ErrorButtons = ({ editor }) => {\n    return <div className=\"tb_error_page_actions\">\n        <div className=\"tb_error_action_list\">\n            {!editor ? <a href={`${isDisplay ? socialwallsUrl : AppUrl}${ErrorUTM}posts-days`} target={'_blank'} className=\"tb_error_btn_primary\">Access Now</a> : <>\n                <button onClick={() => onWindowEvent(2)} className=\"tb_error_btn_primary\" style={{ marginRight: '10px' }}>Add Another Feed</button>\n                <button onClick={() => onWindowEvent(1)} className=\"loadDemoWall tb_error_btn_secondary\">Show Demo Posts</button>\n            </>}\n        </div>\n    </div>\n}\nexport default ErrorButtons","import ErrorBranding from \"../Elements/ErrorBranding\";\nimport ReactHtmlParser from 'react-html-parser';\nimport ErrorButtons from \"./ErrorButtons\";\nimport { onWindowEvent } from \"../../../../utils\";\nimport { useEffect } from \"react\";\nconst ErrorMessage = ({ editor, title, description, utm }) => {\n\n    useEffect(() => {\n        const element = document.getElementById(\"wallmanageFeed\");\n        if(element) element.addEventListener('click', () => onWindowEvent(3))\n    \n        return () => { if(element) element.addEventListener('click', () => onWindowEvent(3)) }\n\n    }, []);\n    \n  return <div className=\"tb_error_page_wrapper\">\n    <div className=\"tb_error_content\">\n      <div className=\"tb_error_title\">{title}</div>\n      <div className=\"tb_error_des\">{ReactHtmlParser(description)}</div>\n      <ErrorButtons editor={editor} />\n    </div>\n    {!editor ? <ErrorBranding utm_campaign={utm} /> : null}\n  </div>\n}\nexport default ErrorMessage\n"],"names":["isDisplay","isDisplayActive","utm_campaign","className","href","WebDisplayUrl","WebWidgetUrl","ErrorUTM","target","style","backgroundImage","CloudUrl","window","location","includes","editor","onClick","onWindowEvent","marginRight","socialwallsUrl","AppUrl","title","description","utm","useEffect","element","document","getElementById","addEventListener","ReactHtmlParser","ErrorBranding"],"sourceRoot":""}