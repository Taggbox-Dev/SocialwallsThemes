{"version":3,"file":"static/js/2230.1e5698d0.chunk.js","mappings":"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","sources":["app/Header/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport \"./scss/Header.scss\";\nimport { CloudHostUrl, CloudPath } from '../../constants';\nconst HeaderType2 = React.lazy(() => import(\"./HeaderType/HeaderType2\"));\nconst HeaderType3 = React.lazy(() => import(\"./HeaderType/HeaderType3\"));\nconst HeaderType4 = React.lazy(() => import(\"./HeaderType/HeaderType4\"));\nconst HeaderType5 = React.lazy(() => import(\"./HeaderType/HeaderType5\"));\nconst HeaderTypeCustom = React.lazy(() => import('./HeaderType/HeaderTypeCustom'));\n\nconst cloudUploadedPath = `${CloudPath}uploaded/`;\nexport const MediaBaseUrl = `${CloudHostUrl}react-app/media/`;\nexport const baseUrl = (pathname) => `${MediaBaseUrl}` + pathname;\n\nconst HeaderRender = ({ isDisplay, Banner }) => {  \n  switch (Banner.bannerType) {\n    case 2:\n      return <Suspense fallback={<></>}> <HeaderType2 {...{isDisplay, Banner}} /></Suspense>\n    case 3:\n      return <Suspense fallback={<></>}> <HeaderType3 {...{isDisplay, Banner}} /></Suspense>\n    case 4:\n      return <Suspense fallback={<></>}> <HeaderType4 {...{isDisplay, Banner}} /></Suspense>\n    case 5:\n      return <Suspense fallback={<></>}> <HeaderType5 {...{isDisplay, Banner}} /></Suspense>\n    default:\n      return <></>\n  }\n}\nexport default class Header extends PureComponent {\n\n  render() {\n    const { isDisplay, Banner, BannerImage, LogoImage, CustomBannerImage, wall } = this.props;\n    const LogonewName = LogoImage && LogoImage.newName ? LogoImage.newName : \"\";\n    const BannernewName = BannerImage && BannerImage.newName ? BannerImage.newName : \"\";\n    \n    if(isDisplay || wall.product) {\n      let logoImage = LogoImage && LogoImage.newName ? (LogonewName && !LogonewName?.includes('logo_bnr') && !LogonewName?.includes(CloudPath)) ? `${CloudPath}${LogoImage.path ? LogoImage.path : \"/\"}${LogoImage.newName}` : Banner.bannerType == 4 ? \"\" : baseUrl(`banner/logo_bnr-${Banner.bannerType}.svg`) : \"\";\n      // let bannerBackgroundImg = `${CloudPath}${CustomBannerImage.path ? CustomBannerImage.path: \"/\"}${CustomBannerImage.newName}`;\n      let bannerBackgroundImg = `${CustomBannerImage.path ? CustomBannerImage.newName: \"/\" }`;\n      let bannerImage = `${CloudPath}${BannerImage.path ? BannerImage.path  : \"/\"}${BannernewName ? BannernewName : \"\" }`;\n\n      if(CustomBannerImage && Object.keys(CustomBannerImage).length > 0 && BannernewName && CustomBannerImage.newName.includes(CloudHostUrl)){\n       // bannerBackgroundImg = String(BannernewName).replace(cloudUploadedPath, \"\");     \n      }\n      \n      if(LogoImage && Object.keys(LogoImage).length > 0 && LogonewName && LogonewName.includes(CloudHostUrl)){\n        logoImage = String(LogonewName).replace(cloudUploadedPath, \"\");   \n      }\n      \n      if(BannerImage && Object.keys(BannerImage).length > 0 && BannernewName && BannernewName.includes(CloudHostUrl)){\n        bannerImage = String(BannerImage.newName).replace(cloudUploadedPath, \"\");\n      }\n      Banner['CustomBannerImage'] = bannerBackgroundImg;\n      Banner['LogoImage'] = logoImage;\n      if(BannerImage && typeof BannerImage === 'object')BannerImage['image'] = bannerImage;\n     } else {\n      if (Banner.CustomBannerImage && Banner.CustomBannerImage.includes(CloudHostUrl)){\n        if(Banner.CustomBannerImage.includes(`${CloudHostUrl}uploaded/`)){\n          Banner['CustomBannerImage'] = String(Banner.CustomBannerImage).replace(`${CloudHostUrl}uploaded/`, \"\");\n        }else if(Banner.CustomBannerImage.includes(`${CloudPath}uploaded/`)){\n          Banner['CustomBannerImage'] = String(Banner.CustomBannerImage).replace(`${CloudPath}uploaded/`, \"\");\n        }\n      }\n       if (Banner.LogoImage && Banner.LogoImage.includes(CloudHostUrl)){\n        if(Banner.LogoImage.includes(`${CloudHostUrl}uploaded/`)){\n          Banner['LogoImage'] = String(Banner.LogoImage).replace(`${CloudHostUrl}uploaded/`, \"\");\n        }else if(Banner.LogoImage.includes(`${CloudPath}uploaded/`)){\n          Banner['LogoImage'] = String(Banner.LogoImage).replace(`${CloudPath}uploaded/`, \"\");\n        }\n       }\n      if (BannerImage.image && BannerImage.image.includes(CloudHostUrl)){\n        if(BannerImage.image.includes(`${CloudHostUrl}uploaded/`)){\n          BannerImage['image'] = String(BannerImage.image).replace(`${CloudHostUrl}uploaded/`, \"\");\n        }else if(BannerImage.image.includes(`${CloudPath}uploaded/`)){\n          BannerImage['image'] = String(BannerImage.image).replace(`${CloudPath}uploaded/`, \"\");\n        }\n      }\n    }\n    return (\n      <div className=\"tb_wall_header__\"> \n        { !BannerImage.status && Banner.status == 1 ? <HeaderRender isDisplay={isDisplay} Banner={Banner} /> : ''}\n        { BannerImage.status == 1  && BannerImage.newName && BannerImage.image.split(`${CloudPath}uploaded/`)[1] !== '' ? <Suspense fallback={<></>}> <HeaderTypeCustom ImageUrl={BannerImage.image} /></Suspense> : ''}\n      </div>\n    );\n  }\n}"],"names":["HeaderType2","React","HeaderType3","HeaderType4","HeaderType5","HeaderTypeCustom","cloudUploadedPath","CloudPath","MediaBaseUrl","CloudHostUrl","baseUrl","pathname","HeaderRender","isDisplay","Banner","bannerType","Suspense","fallback","Header","PureComponent","render","BannerImage","LogoImage","CustomBannerImage","wall","this","props","LogonewName","newName","BannernewName","product","logoImage","includes","path","bannerBackgroundImg","bannerImage","Object","keys","length","String","replace","image","className","status","split","ImageUrl"],"sourceRoot":""}