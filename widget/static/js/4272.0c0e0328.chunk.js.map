{"version":3,"file":"static/js/4272.0c0e0328.chunk.js","mappings":"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","sources":["../node_modules/react-loading-skeleton/dist/index.js","app/Themes/SlideShow/SlideShowSkeleton.js","app/Themes/SlideShow/index.js"],"sourcesContent":["'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\nconst SlideShowSkeleton = ({ height }) => <div className=\"post\">\n    <div className=\"tb_slide_w_half\">\n        <div className=\"makeBgImg\">\n            <Skeleton style={{ height: `calc(85vh - 80px)`, marginTop: '5vh' }} />\n        </div>\n    </div>\n    <div className=\"tb_slide_w_half\">\n        <div className=\"skeletonContent\">\n            <div className=\"skeltoncss\">\n                <div className=\"section-one-skel\">\n                    <Skeleton circle height={100} width={100} />\n                    <h4>\n                        <div className=\"skel-span-m\">\n                            <p><Skeleton height={15} /></p>\n                            <p><Skeleton height={15} /></p>\n                            <p className=\"s-sket-m\"><Skeleton height={15} /></p>\n                        </div>\n                    </h4>\n                </div>\n                <div className=\"section-two-skel\">\n                    <Skeleton circle={true} height={80} width={80} />\n                    <div className=\"skel-span-m2\">\n                        <p><Skeleton height={15} /></p>\n                        <p className=\"sket-two-m\"><Skeleton height={15} /></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\nexport default SlideShowSkeleton;","import React, { PureComponent,  Suspense } from \"react\";\nimport { autoSizeText, renewSlideShowImage } from \"../../../utils\";\nimport { CloudUrl, NoCameraImg } from \"../../../constants\";\nimport SlideShowSkeleton from \"./SlideShowSkeleton\";\nimport \"./scss/slidshows.css\";\nimport \"./scss/zoomSlideshow.css\";\nconst Posts = React.lazy(() => import(\"./post\"));\n\n    let themTimeout = null;\n    let Active = null;\n    let Animation = null;\n    let duration = null;\n    let loading = null;\n    let themTimeoutMount = null;\n    let fullSize = null;\n\nclass SlideShow extends PureComponent {\n   \nstate = {\n    isLoading: true,\n    isAnimation: true,\n    isActiveIndex: -1,\n    activeData: null,\n    activeVideoLength: 0,\n    active: \"\",\n    newImage: \"\",\n    getHeight: 0,\n    wHeight: window.innerHeight,\n    BannerImageHeight: 0,\n    checkThemeheight: false,\n    slideTheme: false\n};\n\ncomponentDidMount() {\n    window.addEventListener(\"resize\", () => this.setState({ wHeight: window.innerHeight }, () => this.resizeUpdate()))\n    this.resizeUpdate()\n    window.clearData=this.clearData\n    this.onChangeNextData();\n    themTimeoutMount = setTimeout(() => this.setState({ slideTheme: true }), 300);\n}\n\nresizeUpdate=()=>{  \n    fullSize = setTimeout(() => {\n        this.setState({ wHeight: window.innerHeight }, () =>  this.onFullscreenChange())\n        autoSizeText();\n    }, 300);\n}\n\ncomponentWillReceiveProps(){\n    this.onFullscreenChange();\n }  \n \n\n clearData=()=>{ this.clearTime() } \n\n clearTime=()=>{\n    \n    this.setState({activeVideoLength : 1 })\n\n    window.removeEventListener('resize', this.resizeUpdate)\n    if(themTimeoutMount) clearTimeout(themTimeoutMount)\n    if(themTimeout)  clearTimeout(themTimeout) \n    if(Active) clearTimeout(Active)\n    if(duration) clearTimeout(duration)\n    if(Animation) clearTimeout(Animation)   \n    if(loading) clearTimeout(loading)\n    if(fullSize) clearTimeout(fullSize)\n }\n\n\n componentWillUnmount() {  this.clearTime() }\n\nonFullscreenChange = () => {\n    const { heightUpdate } = this.props;\n    heightUpdate();\n    this.setState({wHeight: window.innerHeight})\n    themTimeout = setTimeout(() => this.setState({ checkThemeheight: true }), 100);\n};\n\n\nonChangeNextData = () => {\n    \n    const { postData, completeDataObject, wall } = this.props;\n    const { isActiveIndex, activeVideoLength } = this.state;\n    const { Personalization, ThemeRule } = wall;\n\n\n    const postRecord = postData.postData;\n    let postDt = [];\n    if (postRecord && postRecord.length > 0) {\n    postData.postData.map((item) => {\n        if (\n        Personalization.postAuthor ||\n        Personalization.postTime ||\n        !ThemeRule.hideContent ||\n        completeDataObject[item].postFileNew\n        )  postDt.push(completeDataObject[item]);\n      });\n    }\n\n    if (activeVideoLength === 0) {\n\n        const indexIncrement = isActiveIndex >= postDt.length - 1 ? 0 : isActiveIndex + 1;\n        const dataItem = postDt[indexIncrement];\n        const isAnimation = indexIncrement === 0 ? false : true;\n\n        const newImage = renewSlideShowImage(\n            dataItem.networkId,\n            dataItem.carausel,\n            dataItem.file,\n            dataItem.postFileNew\n        );\n\n        this.setState(\n            {\n                isActiveIndex: indexIncrement,\n                activeData: dataItem,\n                active: \"\",\n                newImage,\n                isAnimation,\n            },\n            () => {\n                this.onRepeatLoad();\n                autoSizeText();\n            }\n        );\n    }\n};\n\nonRepeatLoad = () => {\n\n    const { wall } = this.props;\n    const delaySetting = wall.Personalization.slideDelay;\n    const slideDelay = delaySetting ? delaySetting : 10;\n    const timer = delaySetting ? slideDelay * 1000 : 5000;\n    \n\n    const { activeVideoLength } = this.state;\n    if (activeVideoLength === 0) {\n       Active = setTimeout(() => this.setState({ active: \"active\" }), 200);\n       Animation = setTimeout(() => this.setState({ isAnimation: false }), 700);\n       if(duration) clearTimeout(duration)\n       if(loading) clearTimeout(loading)\n\n       loading = setTimeout(() => this.setState({ isLoading: false }, () => this.onChangeNextData()), timer);\n    }\n};\n\n\n    getVideoDuration = (data) => {\n        const { activeData } = this.state;\n        if ((activeData.type === 3 || activeData.type === 5)) {\n              this.setState({ activeVideoLength: 1 })\n              duration = setTimeout(() => {\n                 this.setState({ activeVideoLength: 0 })\n                 this.onChangeNextData()} , Math.floor(data)*1000);\n            }\n       }\n\n\nupdateNewImage = (e) => this.setState({ newImage: e.target.src })\n\nrender() {\n    const { wall, themeHeight } = this.props;\n    const { Personalization, ThemeRule } = wall;\n    const {\n    activeData,\n    isActiveIndex,\n    active,\n    newImage,\n    wHeight,\n    checkThemeheight,\n    } = this.state;\n\n    var typeClass = \"\";\n    var blurStyle = {};\n    var columnLeftClass = `${\n    ThemeRule.hideContent &&\n    !Personalization.postTime &&\n    !Personalization.postAuthor\n        ? \"tb_slide_w_full\"\n        : \"tb_slide_w_half\"\n    }`;\n    var columnRightClass = \"tb_slide_w_half\";\n    \n    if (activeData && activeData.id) {\n    if (activeData.type === 1) {\n        columnLeftClass = \"hidden\";\n        columnRightClass = \"tb_slide_w_full\";\n        typeClass = \"onlyTextPost\";\n    } else if (activeData.type === 4 || activeData.type === 5)\n        typeClass = \"postTypeImg\";\n\n    var mediaClass = \"makeBgImg\";\n    if (activeData.type === 3 || activeData.type === 5)\n        mediaClass = \"blackBgVideo\";\n    if (activeData.file) \n        blurStyle = {\n            backgroundImage: `url(${newImage}),url(${NoCameraImg})`,\n        };\n      else blurStyle = { backgroundImage: `url(${CloudUrl}/images/blank.jpg)` };\n    \n    var blurClass = \"\";\n    if (ThemeRule.blurBackground === 0) {\n        blurStyle = {\n        backgroundColor: ThemeRule.blurColor,\n        filter: \"blur(0px)\",\n        WebkitFilter: \"blur(0px)\",\n        MozFilter: \"blur(0px)\",\n        opacity: 1,\n        };\n        blurClass = \"blurRemoved\";\n     }\n  }\n  \n  \n    return checkThemeheight\n    ? wall && ( \n        <div\n            id=\"wPosts\"\n            className={`theme${ThemeRule.themeId} themeSlidShows zoomSlidShow`}\n            style={{\n            height: wHeight - (themeHeight+1),\n            backgroundColor: !wall.Background.transparent\n                ? wall.Background.color\n                : \"#000\",\n            }}\n        > \n            <div\n            className={`${\n                [74, 76].includes(ThemeRule.themeId)\n                ? \"tb_slide_show_wrapper\"\n                : \"tb_slide_show_wrapper_no_padding\"\n            }`}\n            >\n            <div className=\"grid-sizer flatCard\"></div>\n            {activeData && activeData.id && (\n                <Suspense fallback={<SlideShowSkeleton />}>\n                {active ? (\n                 <Suspense>  \n                    <Posts\n                        updateNewImage={this.updateNewImage}\n                        activeData={activeData}\n                        typeClass={typeClass}\n                        blurStyle={blurStyle}\n                        blurClass={blurClass}\n                        mediaClass={mediaClass}\n                        columnLeftClass={columnLeftClass}\n                        columnRightClass={columnRightClass}\n                        wall={wall}\n                        getVideoDuration={this.getVideoDuration}\n                        activeIndex={isActiveIndex}\n                        active={active}\n                        /> </Suspense> \n                    ) : null }\n                </Suspense>\n            )}\n            </div>\n        </div>\n        )\n    : null;\n  }\n}\n\nexport default SlideShow;"],"names":["SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","count","wrapper","Wrapper","className","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","marginTop","Posts","themTimeout","Active","Animation","loading","themTimeoutMount","fullSize","SlideShow","PureComponent","state","isLoading","isAnimation","isActiveIndex","activeData","activeVideoLength","active","newImage","getHeight","wHeight","window","innerHeight","BannerImageHeight","checkThemeheight","slideTheme","resizeUpdate","setTimeout","this","setState","onFullscreenChange","autoSizeText","clearData","clearTime","removeEventListener","clearTimeout","heightUpdate","props","onChangeNextData","postData","completeDataObject","wall","Personalization","ThemeRule","postRecord","postDt","length","item","postAuthor","postTime","hideContent","postFileNew","indexIncrement","dataItem","renewSlideShowImage","networkId","carausel","file","onRepeatLoad","delaySetting","slideDelay","timer","getVideoDuration","data","type","floor","updateNewImage","e","target","src","componentDidMount","addEventListener","componentWillReceiveProps","componentWillUnmount","render","themeHeight","typeClass","blurStyle","columnLeftClass","columnRightClass","id","mediaClass","backgroundImage","NoCameraImg","CloudUrl","blurClass","blurBackground","backgroundColor","blurColor","filter","WebkitFilter","MozFilter","opacity","themeId","Background","transparent","color","includes","Suspense","fallback","activeIndex"],"sourceRoot":""}