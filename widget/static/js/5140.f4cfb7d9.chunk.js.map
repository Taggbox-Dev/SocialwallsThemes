{"version":3,"file":"static/js/5140.f4cfb7d9.chunk.js","mappings":"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","sources":["app/Components/UserComponents/ReportMedia/Elements/ReportSuccess.js","app/Components/UserComponents/ReportMedia/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\n\nexport default class ReportSuccess extends PureComponent {\n  render() {\n    return  <div className=\"tb_report_media_succ\">\n                <div className=\"tb_report_media_succ_00\">\n                    <div className=\"tb_report_media_title\">Success</div>\n                    <div className=\"tb_report_media_p\">This media has been successfully reported.</div>\n                    <div className=\"tb_report_media_succ_ico\">\n                        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 98.5 98.5\" enableBackground=\"new 0 0 98.5 98.5\" space=\"preserve\">\n                            <path className=\"tb_report_media_suc_svg\" fill=\"none\" strokeWidth=\"8\" stroke-miterlimit=\"10\" d=\"M81.7,17.8C73.5,9.3,62,4,49.2,4C24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3\"/>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { reportMedia, reportMediaClosePopUp } from '../../../../actions/themeActions'\nimport ReportSuccess from \"./Elements/ReportSuccess\";\n\nconst validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\nclass ReportMediaModal extends PureComponent {\n    state = {\n        email: '',\n        reason: '',\n        emailError: false,\n        reasonError: false,\n        submitErrorMessage: null,\n        modalShow: false,\n        successModal: false,\n        loadbtn: false\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.setState({ modalShow: true }), 100);\n        this.popUpCloseClckOnWindow()\n    }\n\n    onTextEmail = event => {\n        this.setState({ email: event.target.value, emailError: false }, () => {\n            if (this.state.email === null || this.state.email.length === 0 || !validateEmail(this.state.email) || this.state.email.includes(\"mailinator\")) this.setState({ emailError: true })\n        })\n    }\n\n    onTextReason = event => {\n        this.setState({ reason: event.target.value, reasonError: false }, () => {\n            if (this.state.reason === null || this.state.reason.length < 50) this.setState({ reasonError: true })\n        })\n    }\n\n    onSubmitData = event => {\n        const { email, reason } = this.state;\n        const { item, wall } = this.props;\n        const postId = item.id;\n        const wallId = wall.Wall.id;\n        const postData = {image:item.file, rating: item.rating, network: item.network.id, authorImage: item.author.picture, authorName: item.author.name, authorUsername: item.author.username, content: item.content, time: item.createdAt, mediaType : item.type}\n\n        if ((email && email.length > 0 && validateEmail(email) && !email.includes(\"mailinator\"))) {\n            if (reason != null && reason.length > 50) {\n                this.setState({ loadbtn: true })\n                reportMedia({ wall_id: wallId, post_id: postId, email: email, reason: reason, post_data: postData }).then((response) => {\n                    this.setState({ successModal: true })\n\n                    setTimeout(() =>  this.onClose()  , 2000);\n                })\n                    .catch((error) => {\n                        const { data } = error.response;\n                        if (data.response_code === 404) {\n                            this.setState({ submitErrorMessage: data.message })\n                        } else {\n                            this.setState({ submitErrorMessage: 'Something went wrong' })\n                        }\n                        this.setState({ loadbtn: false })\n                    });\n            } else {\n                this.setState({ reasonError: true })\n            }\n        } else {\n            if (this.state.email === null || this.state.email.length === 0 || !validateEmail(this.state.email) || email.includes(\"mailinator\")) this.setState({ emailError: true })\n        }\n    }\n\n  \n\n    onClose = event => {\n        const { reportMediaClosePopUp } = this.props;\n        reportMediaClosePopUp();\n    }\n    popUpCloseClckOnWindow=()=>{\n        var self=this;\n        document.addEventListener(\n          \"click\",\n          (event)=>{if(event.target.matches(\".tb_report_media_modal\")){\n            self.props.reportMediaClosePopUp()\n          }},\n          false\n        )\n      }\n\n    render() {\n        const { email, reason, emailError, reasonError, submitErrorMessage, successModal, modalShow, loadbtn } = this.state;\n        const { item } = this.props;\n        const mediaType = (item.type === 3 || item.type === 5) ? true : false\n        const isYoutubePost = (item.network.id === 7) ? true : false\n        const isAudio = item.isAudio === 1 ? true : false\n        return (\n            <div className={`tb_report_media_modal ${modalShow ? `tb_modal_show` : ``}`}>\n                <div className=\"tb_report_media_container\">\n                    <div className=\"tb_report_media_body\">\n                        <div className=\"tb_report_media_close\" onClick={this.onClose}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" >\n                                    <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\n                                        <rect x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\n                                        <rect transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\n                                    </g>\n                                </g>\n                            </svg>\n                        </div>\n                        {successModal ? <ReportSuccess />\n                            : <div className=\"tb_report_media_wrapper\">\n                                <div className=\"tb_report_media_title\">Report This Post</div>\n                                <div className=\"tb_report_media_p\">This means it is inappropriate, it has violated a law, or it infringes upon someone's rights. Reporting this post will flag it for further review.</div>\n                                {item.postFileNew !== '' && item.postFileNew != null ? <div className=\"tb_report_media__\">\n                                    <div className=\"tb_report_media_img\" style={{ backgroundImage: `url(${item.postFileNew})` }}>\n                                        {mediaType ? isYoutubePost ? <div className=\"tb_report_media_youtube_ico tb__icon tb-youtube-default\"><div className=\"tb_color_icon__ tb-youtube\"><div></div></div><div className=\"tb_color_icon__ tb_d_youtube_path_2\"><div></div></div></div> : \n                                        isAudio ? <div className=\"tb_report_media_ico tb__icon tb-audio\"><div></div></div> :\n                                        <div className=\"tb_report_media_video_ico tb__icon tb-play\"> </div> : ''}\n                                    </div>\n                                </div> : null}\n                                <div className=\"tb_report_media_form\">\n                                    <div className=\"tb_report_media_form_group\">\n                                        <div className=\"tb_report_media_label\">Email <div className=\"tb_report_media_required\">*</div> </div>\n                                        <input type=\"email\" value={email} className=\"tb_report_media_input\" onChange={this.onTextEmail} placeholder=\"Enter email address\" />\n                                        {emailError ? <div className=\"tb_report_media_error_\">* Please enter correct email.</div> : null}\n                                    </div>\n                                    <div className=\"tb_report_media_form_group\">\n                                        <div className=\"tb_report_media_label\">Reason <div className=\"tb_report_media_required\">*</div> </div>\n                                        <textarea className=\"tb_report_media_input tb_report_media_textarea\" value={reason} onChange={this.onTextReason} placeholder=\"I am reporting this media because...\"></textarea>\n                                        {reasonError ? <div className=\"tb_report_media_error_\">* Please enter minimun 50 characters</div> : null}\n                                    </div>\n                                    <div className=\"tb_report_media_buttons\">\n                                        <div className=\"tb_report_media_cancel\" onClick={this.onClose}>\n                                            Cancel\n                                    </div>\n                                        <div className={`tb_report_media_submit ${loadbtn ? 'tb_report_media_spinner' : ''}`} onClick={this.onSubmitData}>\n                                            Report\n                                    </div>\n                                    </div>\n                                    {submitErrorMessage && submitErrorMessage.length > 0 ? <div className=\"tb_report_media_error\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                            <g id=\"Stockholm-icons-/-Code-/-Info-circle\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                                <rect id=\"bound\" x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                                <circle id=\"Oval-5\" fill=\"#db4b20\" opacity=\"0.3\" cx=\"12\" cy=\"12\" r=\"10\" />\n                                                <rect id=\"Rectangle-9\" fill=\"#db4b20\" x=\"11\" y=\"10\" width=\"2\" height=\"7\" rx=\"1\" />\n                                                <rect id=\"Rectangle-9-Copy\" fill=\"#db4b20\" x=\"11\" y=\"7\" width=\"2\" height=\"2\" rx=\"1\" />\n                                            </g>\n                                        </svg>\n                                        {submitErrorMessage}\n                                    </div> : null}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        reportMediaClosePopUp: () => dispatch(reportMediaClosePopUp())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportMediaModal);"],"names":["ReportSuccess","PureComponent","render","className","version","id","xmlns","xlink","x","y","viewBox","enableBackground","space","fill","strokeWidth","d","validateEmail","email","test","String","toLowerCase","ReportMediaModal","state","reason","emailError","reasonError","submitErrorMessage","modalShow","successModal","loadbtn","onTextEmail","event","this","setState","target","value","length","includes","onTextReason","onSubmitData","item","wall","props","postId","wallId","Wall","postData","image","file","rating","network","authorImage","author","picture","authorName","name","authorUsername","username","content","time","createdAt","mediaType","type","reportMedia","wall_id","post_id","post_data","then","response","setTimeout","onClose","catch","error","data","response_code","message","reportMediaClosePopUp","popUpCloseClckOnWindow","self","document","addEventListener","matches","componentDidMount","isYoutubePost","isAudio","onClick","width","height","stroke","fillRule","transform","rx","postFileNew","style","backgroundImage","onChange","placeholder","opacity","cx","cy","r","connect","dispatch"],"sourceRoot":""}