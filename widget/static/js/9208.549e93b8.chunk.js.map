{"version":3,"file":"static/js/9208.549e93b8.chunk.js","mappings":"sMAKA,MAAMA,EAAiBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAC/C,MAAMC,UAAyBC,EAAAA,cAC5CC,YAAYC,GACVC,MAAMD,GADW,KASnBE,UAAYA,IACVC,KAAKH,MAAMI,kBAAkBF,EAA7B,EARAC,KAAKE,MAAQ,CACXH,UAAW,CACTI,OAA0B,MAAlBf,EAAyBA,EAAe,GAAK,OACrDgB,MAAyB,MAAlBhB,EAAyBA,EAAe,GAAK,QAGzD,CAIDiB,SACE,MAAM,UAAEC,EAAF,KAAaC,EAAb,KAAmBC,GAASR,KAAKH,OACjC,UAAEE,GAAcC,KAAKE,MAiB3B,OAAO,iCACC,SAAC,IAAD,CAAYO,SAAUF,EAAKG,SAAUH,KAAM,CAAEI,KAAMJ,EAAKI,KAAMC,QAASL,EAAKK,QAASC,GAAIN,EAAKM,GAAIC,SAAUP,EAAKO,SAAUC,QAASR,EAAKQ,SAAWP,KAAMA,EAAMP,kBAAmBD,KAAKD,UAAWiB,QAAS,KAC5M,gBAAKC,UAAU,8BAAf,UACE,UAAC,KAAD,CAAQC,UAAU,EAAOD,UAAU,6BAA6BE,QAnBzD,CAEfC,QAAQ,EACRC,MAAO,IACPC,IAAK,EACLC,UAAU,EACVC,YAAY,EACZC,QAAS,EACTC,YAAY,EACZC,QAAQ,EACRC,QAAS,CACPF,WAAY,0CACZG,KAAM,iDAOA,WACE,SAAC,KAAD,UACGvB,EAAUwB,KAAI,CAACC,EAAWC,KAAU,SAAC,KAAD,CAAyBC,MAAO,CAAEC,OAAQ,GAA1C,SAEd,IAAnBH,EAAUI,MAAiC,IAAnBJ,EAAUI,MAClC,SAAC,IAAD,CAAyC1B,SAAUsB,EAAUrB,SAAUH,KAAM,CAAEI,KAAMJ,EAAKI,KAAMC,QAASL,EAAKK,QAASC,GAAIkB,EAAUlB,GAAIC,SAAUP,EAAKO,SAAUC,QAASgB,EAAUhB,SAAWP,KAAMA,EAAMP,kBAAmBD,KAAKD,UAAWiB,QAAS,GAAxP,sBAAgCgB,IACV,IAAnBD,EAAUI,MAAiC,IAAnBJ,EAAUI,MACnC,SAAC,IAAD,CAAY5B,KAAM,CAAE6B,SAAUL,EAAUM,UAAW1B,KAAMJ,EAAKI,KAAMC,QAASL,EAAKK,QAASC,GAAIkB,EAAUlB,GAAIC,SAAUP,EAAKO,SAAUC,QAASgB,EAAUhB,SAAWP,KAAMA,EAAMP,kBAAmBD,KAAKD,UAAWiB,QAAS,IAAQ,MALnLgB,QASzD,iBAAKf,UAAU,kEAAf,WACE,gBAAKA,UAAU,8GAAf,UAA6H,sBAC7H,gBAAKA,UAAU,iHAAf,UAAgI,+BAK/I,E","sources":["app/Components/PostPopUp/Elements/PopUpMediaSlider.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport PopUpImage from \"./PopUpImage\";\nimport PopUpVideo from \"./PopUpVideo\";\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\n\nconst mediaDimension = JSON.parse(window.localStorage.getItem('mediaDimension'));\nexport default class PopUpMediaSlider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaSize: {\n        height: mediaDimension != null ? mediaDimension[0] : '85vh',\n        width: mediaDimension != null ? mediaDimension[1] : '85vh',\n      }\n    };\n  }\n  mediaSize = mediaSize => {\n    this.props.mediaSizeCallback(mediaSize);\n  }\n  render() {\n    const { imageList, data, wall } = this.props\n    const { mediaSize } = this.state\n    const settings = {\n      //type:'loop',\n      rewind: true,\n      speed: 1000,\n      gap: 0,\n      autoplay: false,\n      autoHeight: true,\n      padding: 0,\n      pagination: false,\n      arrows: false,\n      classes: {\n        pagination: 'splide__pagination tb_modal_slider_dots',\n        page: 'splide__pagination__page tb_modal_slider_dot',\n      },\n    };\n    \n    return <>\n            <PopUpImage ImageUrl={data.postFile} data={{ link: data.link, network: data.network, id: data.id, filterId: data.filterId, stories: data.stories }} wall={wall} mediaSizeCallback={this.mediaSize} opacity={0} />\n            <div className=\"tb_post_modal_slide_holder_\">\n              <Splide hasTrack={false} className=\"tb_post_modal_media_slider\" options={settings}>\n                <SplideTrack>\n                  {imageList.map((imageItem, index) => <SplideSlide key={index} style={{ margin: 0, \n                  }}>\n                    {(imageItem.type === 2 || imageItem.type === 4) ?\n                      <PopUpImage key={`multi-slider${index}`} ImageUrl={imageItem.postFile} data={{ link: data.link, network: data.network, id: imageItem.id, filterId: data.filterId, stories: imageItem.stories }} wall={wall} mediaSizeCallback={this.mediaSize} opacity={1} />\n                      : (imageItem.type === 3 || imageItem.type === 5) ?\n                        <PopUpVideo data={{ mediaUrl: imageItem.mediaFile, link: data.link, network: data.network, id: imageItem.id, filterId: data.filterId, stories: imageItem.stories }} wall={wall} mediaSizeCallback={this.mediaSize} opacity={1} /> : null}\n                  </SplideSlide>\n                  )}\n                </SplideTrack>\n                <div className=\"splide__arrows splide__arrows--ltr tb_post_modal_arrow_wrapper_\">\n                  <div className=\"splide__arrow splide__arrow--prev tb_post_modal_arrow tb_post_modal_arrow_left__ tb__icon tb-arrow-left-alt\"><div></div></div>\n                  <div className=\"splide__arrow splide__arrow--next  tb_post_modal_arrow tb_post_modal_arrow_right__ tb__icon tb-arrow-right-alt\"><div></div></div>\n                </div>\n              </Splide>\n            </div>\n          </>\n  }\n}"],"names":["mediaDimension","JSON","parse","window","localStorage","getItem","PopUpMediaSlider","PureComponent","constructor","props","super","mediaSize","this","mediaSizeCallback","state","height","width","render","imageList","data","wall","ImageUrl","postFile","link","network","id","filterId","stories","opacity","className","hasTrack","options","rewind","speed","gap","autoplay","autoHeight","padding","pagination","arrows","classes","page","map","imageItem","index","style","margin","type","mediaUrl","mediaFile"],"sourceRoot":""}